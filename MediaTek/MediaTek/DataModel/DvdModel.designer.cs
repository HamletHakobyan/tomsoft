//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Data.Objects.DataClasses.EdmSchemaAttribute()]
[assembly: global::System.Data.Objects.DataClasses.EdmRelationshipAttribute("MediaTek", "FK_country_language_id_id", "language", global::System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MediaTek.DataModel.Language), "country", global::System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaTek.DataModel.Country))]
[assembly: global::System.Data.Objects.DataClasses.EdmRelationshipAttribute("MediaTek", "FK_director_country_id_id", "country", global::System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MediaTek.DataModel.Country), "director", global::System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaTek.DataModel.Director))]
[assembly: global::System.Data.Objects.DataClasses.EdmRelationshipAttribute("MediaTek", "FK_movie_director_id_id", "director", global::System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MediaTek.DataModel.Director), "movie", global::System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaTek.DataModel.Movie))]
[assembly: global::System.Data.Objects.DataClasses.EdmRelationshipAttribute("MediaTek", "FK_movie_language_id_id", "language", global::System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MediaTek.DataModel.Language), "movie", global::System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaTek.DataModel.Movie))]
[assembly: global::System.Data.Objects.DataClasses.EdmRelationshipAttribute("MediaTek", "FK_lend_movie_id_id", "movie", global::System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MediaTek.DataModel.Movie), "lend", global::System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaTek.DataModel.Lend))]
[assembly: global::System.Data.Objects.DataClasses.EdmRelationshipAttribute("MediaTek", "FK_movie_media_type_id_id", "media_type", global::System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MediaTek.DataModel.MediaType), "movie", global::System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaTek.DataModel.Movie))]

// Original file name:
// Generation date: 15/09/2008 01:38:38
namespace MediaTek.DataModel
{
    
    /// <summary>
    /// There are no comments for DvdEntities in the schema.
    /// </summary>
    public partial class DvdEntities : global::System.Data.Objects.ObjectContext
    {
        /// <summary>
        /// Initializes a new DvdEntities object using the connection string found in the 'DvdEntities' section of the application configuration file.
        /// </summary>
        public DvdEntities() : 
                base("name=DvdEntities", "DvdEntities")
        {
            this.OnContextCreated();
        }
        /// <summary>
        /// Initialize a new DvdEntities object.
        /// </summary>
        public DvdEntities(string connectionString) : 
                base(connectionString, "DvdEntities")
        {
            this.OnContextCreated();
        }
        /// <summary>
        /// Initialize a new DvdEntities object.
        /// </summary>
        public DvdEntities(global::System.Data.EntityClient.EntityConnection connection) : 
                base(connection, "DvdEntities")
        {
            this.OnContextCreated();
        }
        partial void OnContextCreated();
        /// <summary>
        /// There are no comments for Countries in the schema.
        /// </summary>
        public global::System.Data.Objects.ObjectQuery<Country> Countries
        {
            get
            {
                if ((this._Countries == null))
                {
                    this._Countries = base.CreateQuery<Country>("[Countries]");
                }
                return this._Countries;
            }
        }
        private global::System.Data.Objects.ObjectQuery<Country> _Countries;
        /// <summary>
        /// There are no comments for Directors in the schema.
        /// </summary>
        public global::System.Data.Objects.ObjectQuery<Director> Directors
        {
            get
            {
                if ((this._Directors == null))
                {
                    this._Directors = base.CreateQuery<Director>("[Directors]");
                }
                return this._Directors;
            }
        }
        private global::System.Data.Objects.ObjectQuery<Director> _Directors;
        /// <summary>
        /// There are no comments for Languages in the schema.
        /// </summary>
        public global::System.Data.Objects.ObjectQuery<Language> Languages
        {
            get
            {
                if ((this._Languages == null))
                {
                    this._Languages = base.CreateQuery<Language>("[Languages]");
                }
                return this._Languages;
            }
        }
        private global::System.Data.Objects.ObjectQuery<Language> _Languages;
        /// <summary>
        /// There are no comments for Lends in the schema.
        /// </summary>
        public global::System.Data.Objects.ObjectQuery<Lend> Lends
        {
            get
            {
                if ((this._Lends == null))
                {
                    this._Lends = base.CreateQuery<Lend>("[Lends]");
                }
                return this._Lends;
            }
        }
        private global::System.Data.Objects.ObjectQuery<Lend> _Lends;
        /// <summary>
        /// There are no comments for MediaTypes in the schema.
        /// </summary>
        public global::System.Data.Objects.ObjectQuery<MediaType> MediaTypes
        {
            get
            {
                if ((this._MediaTypes == null))
                {
                    this._MediaTypes = base.CreateQuery<MediaType>("[MediaTypes]");
                }
                return this._MediaTypes;
            }
        }
        private global::System.Data.Objects.ObjectQuery<MediaType> _MediaTypes;
        /// <summary>
        /// There are no comments for Movies in the schema.
        /// </summary>
        public global::System.Data.Objects.ObjectQuery<Movie> Movies
        {
            get
            {
                if ((this._Movies == null))
                {
                    this._Movies = base.CreateQuery<Movie>("[Movies]");
                }
                return this._Movies;
            }
        }
        private global::System.Data.Objects.ObjectQuery<Movie> _Movies;
        /// <summary>
        /// There are no comments for Countries in the schema.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
        /// <summary>
        /// There are no comments for Directors in the schema.
        /// </summary>
        public void AddToDirectors(Director director)
        {
            base.AddObject("Directors", director);
        }
        /// <summary>
        /// There are no comments for Languages in the schema.
        /// </summary>
        public void AddToLanguages(Language language)
        {
            base.AddObject("Languages", language);
        }
        /// <summary>
        /// There are no comments for Lends in the schema.
        /// </summary>
        public void AddToLends(Lend lend)
        {
            base.AddObject("Lends", lend);
        }
        /// <summary>
        /// There are no comments for MediaTypes in the schema.
        /// </summary>
        public void AddToMediaTypes(MediaType mediaType)
        {
            base.AddObject("MediaTypes", mediaType);
        }
        /// <summary>
        /// There are no comments for Movies in the schema.
        /// </summary>
        public void AddToMovies(Movie movie)
        {
            base.AddObject("Movies", movie);
        }
    }
    /// <summary>
    /// There are no comments for MediaTek.Country in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::System.Data.Objects.DataClasses.EdmEntityTypeAttribute(NamespaceName="MediaTek", Name="Country")]
    [global::System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
    [global::System.Serializable()]
    public partial class Country : global::System.Data.Objects.DataClasses.EntityObject
    {
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static Country CreateCountry(long id, string name)
        {
            Country country = new Country();
            country.Id = id;
            country.Name = name;
            return country;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this.ReportPropertyChanging("Id");
                this._Id = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("Id");
                this.OnIdChanged();
            }
        }
        private long _Id;
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this.ReportPropertyChanging("Name");
                this._Name = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, false);
                this.ReportPropertyChanged("Name");
                this.OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        /// <summary>
        /// There are no comments for Property FlagRaw in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FlagRaw
        {
            get
            {
                return global::System.Data.Objects.DataClasses.StructuralObject.GetValidValue(this._FlagRaw);
            }
            set
            {
                this.OnFlagRawChanging(value);
                this.ReportPropertyChanging("FlagRaw");
                this._FlagRaw = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, true);
                this.ReportPropertyChanged("FlagRaw");
                this.OnFlagRawChanged();
            }
        }
        private byte[] _FlagRaw;
        partial void OnFlagRawChanging(byte[] value);
        partial void OnFlagRawChanged();
        /// <summary>
        /// There are no comments for Language in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("MediaTek", "FK_country_language_id_id", "language")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public Language Language
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Language>("MediaTek.FK_country_language_id_id", "language").Value;
            }
            set
            {
                ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Language>("MediaTek.FK_country_language_id_id", "language").Value = value;
            }
        }
        /// <summary>
        /// There are no comments for Language in the schema.
        /// </summary>
        [global::System.ComponentModel.BrowsableAttribute(false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityReference<Language> LanguageReference
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Language>("MediaTek.FK_country_language_id_id", "language");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Language>("MediaTek.FK_country_language_id_id", "language", value);
                }
            }
        }
        /// <summary>
        /// There are no comments for Directors in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("MediaTek", "FK_director_country_id_id", "director")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityCollection<Director> Directors
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Director>("MediaTek.FK_director_country_id_id", "director");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Director>("MediaTek.FK_director_country_id_id", "director", value);
                }
            }
        }
    }
    /// <summary>
    /// There are no comments for MediaTek.Director in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::System.Data.Objects.DataClasses.EdmEntityTypeAttribute(NamespaceName="MediaTek", Name="Director")]
    [global::System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
    [global::System.Serializable()]
    public partial class Director : global::System.Data.Objects.DataClasses.EntityObject
    {
        /// <summary>
        /// Create a new Director object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static Director CreateDirector(long id, string name)
        {
            Director director = new Director();
            director.Id = id;
            director.Name = name;
            return director;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this.ReportPropertyChanging("Id");
                this._Id = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("Id");
                this.OnIdChanged();
            }
        }
        private long _Id;
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this.ReportPropertyChanging("Name");
                this._Name = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, false);
                this.ReportPropertyChanged("Name");
                this.OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        /// <summary>
        /// There are no comments for Property PictureRaw in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] PictureRaw
        {
            get
            {
                return global::System.Data.Objects.DataClasses.StructuralObject.GetValidValue(this._PictureRaw);
            }
            set
            {
                this.OnPictureRawChanging(value);
                this.ReportPropertyChanging("PictureRaw");
                this._PictureRaw = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, true);
                this.ReportPropertyChanged("PictureRaw");
                this.OnPictureRawChanged();
            }
        }
        private byte[] _PictureRaw;
        partial void OnPictureRawChanging(byte[] value);
        partial void OnPictureRawChanged();
        /// <summary>
        /// There are no comments for Country in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("MediaTek", "FK_director_country_id_id", "country")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public Country Country
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Country>("MediaTek.FK_director_country_id_id", "country").Value;
            }
            set
            {
                ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Country>("MediaTek.FK_director_country_id_id", "country").Value = value;
            }
        }
        /// <summary>
        /// There are no comments for Country in the schema.
        /// </summary>
        [global::System.ComponentModel.BrowsableAttribute(false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityReference<Country> CountryReference
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Country>("MediaTek.FK_director_country_id_id", "country");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Country>("MediaTek.FK_director_country_id_id", "country", value);
                }
            }
        }
        /// <summary>
        /// There are no comments for Movies in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("MediaTek", "FK_movie_director_id_id", "movie")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityCollection<Movie> Movies
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Movie>("MediaTek.FK_movie_director_id_id", "movie");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Movie>("MediaTek.FK_movie_director_id_id", "movie", value);
                }
            }
        }
    }
    /// <summary>
    /// There are no comments for MediaTek.Language in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::System.Data.Objects.DataClasses.EdmEntityTypeAttribute(NamespaceName="MediaTek", Name="Language")]
    [global::System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
    [global::System.Serializable()]
    public partial class Language : global::System.Data.Objects.DataClasses.EntityObject
    {
        /// <summary>
        /// Create a new Language object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static Language CreateLanguage(long id, string name)
        {
            Language language = new Language();
            language.Id = id;
            language.Name = name;
            return language;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this.ReportPropertyChanging("Id");
                this._Id = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("Id");
                this.OnIdChanged();
            }
        }
        private long _Id;
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this.ReportPropertyChanging("Name");
                this._Name = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, false);
                this.ReportPropertyChanged("Name");
                this.OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        /// <summary>
        /// There are no comments for Property Code in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public string Code
        {
            get
            {
                return this._Code;
            }
            set
            {
                this.OnCodeChanging(value);
                this.ReportPropertyChanging("Code");
                this._Code = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, true);
                this.ReportPropertyChanged("Code");
                this.OnCodeChanged();
            }
        }
        private string _Code;
        partial void OnCodeChanging(string value);
        partial void OnCodeChanged();
        /// <summary>
        /// There are no comments for Property SymbolRaw in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SymbolRaw
        {
            get
            {
                return global::System.Data.Objects.DataClasses.StructuralObject.GetValidValue(this._SymbolRaw);
            }
            set
            {
                this.OnSymbolRawChanging(value);
                this.ReportPropertyChanging("SymbolRaw");
                this._SymbolRaw = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, true);
                this.ReportPropertyChanged("SymbolRaw");
                this.OnSymbolRawChanged();
            }
        }
        private byte[] _SymbolRaw;
        partial void OnSymbolRawChanging(byte[] value);
        partial void OnSymbolRawChanged();
        /// <summary>
        /// There are no comments for Countries in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("MediaTek", "FK_country_language_id_id", "country")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityCollection<Country> Countries
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Country>("MediaTek.FK_country_language_id_id", "country");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Country>("MediaTek.FK_country_language_id_id", "country", value);
                }
            }
        }
        /// <summary>
        /// There are no comments for Movies in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("MediaTek", "FK_movie_language_id_id", "movie")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityCollection<Movie> Movies
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Movie>("MediaTek.FK_movie_language_id_id", "movie");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Movie>("MediaTek.FK_movie_language_id_id", "movie", value);
                }
            }
        }
    }
    /// <summary>
    /// There are no comments for MediaTek.Lend in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::System.Data.Objects.DataClasses.EdmEntityTypeAttribute(NamespaceName="MediaTek", Name="Lend")]
    [global::System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
    [global::System.Serializable()]
    public partial class Lend : global::System.Data.Objects.DataClasses.EntityObject
    {
        /// <summary>
        /// Create a new Lend object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="lentTo">Initial value of LentTo.</param>
        /// <param name="lentDate">Initial value of LentDate.</param>
        public static Lend CreateLend(long id, string lentTo, global::System.DateTime lentDate)
        {
            Lend lend = new Lend();
            lend.Id = id;
            lend.LentTo = lentTo;
            lend.LentDate = lentDate;
            return lend;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this.ReportPropertyChanging("Id");
                this._Id = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("Id");
                this.OnIdChanged();
            }
        }
        private long _Id;
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Property LentTo in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public string LentTo
        {
            get
            {
                return this._LentTo;
            }
            set
            {
                this.OnLentToChanging(value);
                this.ReportPropertyChanging("LentTo");
                this._LentTo = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, false);
                this.ReportPropertyChanged("LentTo");
                this.OnLentToChanged();
            }
        }
        private string _LentTo;
        partial void OnLentToChanging(string value);
        partial void OnLentToChanged();
        /// <summary>
        /// There are no comments for Property LentDate in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.DateTime LentDate
        {
            get
            {
                return this._LentDate;
            }
            set
            {
                this.OnLentDateChanging(value);
                this.ReportPropertyChanging("LentDate");
                this._LentDate = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("LentDate");
                this.OnLentDateChanged();
            }
        }
        private global::System.DateTime _LentDate;
        partial void OnLentDateChanging(global::System.DateTime value);
        partial void OnLentDateChanged();
        /// <summary>
        /// There are no comments for Property ReturnDate in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Nullable<global::System.DateTime> ReturnDate
        {
            get
            {
                return this._ReturnDate;
            }
            set
            {
                this.OnReturnDateChanging(value);
                this.ReportPropertyChanging("ReturnDate");
                this._ReturnDate = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("ReturnDate");
                this.OnReturnDateChanged();
            }
        }
        private global::System.Nullable<global::System.DateTime> _ReturnDate;
        partial void OnReturnDateChanging(global::System.Nullable<global::System.DateTime> value);
        partial void OnReturnDateChanged();
        /// <summary>
        /// There are no comments for Movie in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("MediaTek", "FK_lend_movie_id_id", "movie")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public Movie Movie
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Movie>("MediaTek.FK_lend_movie_id_id", "movie").Value;
            }
            set
            {
                ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Movie>("MediaTek.FK_lend_movie_id_id", "movie").Value = value;
            }
        }
        /// <summary>
        /// There are no comments for Movie in the schema.
        /// </summary>
        [global::System.ComponentModel.BrowsableAttribute(false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityReference<Movie> MovieReference
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Movie>("MediaTek.FK_lend_movie_id_id", "movie");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Movie>("MediaTek.FK_lend_movie_id_id", "movie", value);
                }
            }
        }
    }
    /// <summary>
    /// There are no comments for MediaTek.MediaType in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::System.Data.Objects.DataClasses.EdmEntityTypeAttribute(NamespaceName="MediaTek", Name="MediaType")]
    [global::System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
    [global::System.Serializable()]
    public partial class MediaType : global::System.Data.Objects.DataClasses.EntityObject
    {
        /// <summary>
        /// Create a new MediaType object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static MediaType CreateMediaType(long id, string name)
        {
            MediaType mediaType = new MediaType();
            mediaType.Id = id;
            mediaType.Name = name;
            return mediaType;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this.ReportPropertyChanging("Id");
                this._Id = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("Id");
                this.OnIdChanged();
            }
        }
        private long _Id;
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this.ReportPropertyChanging("Name");
                this._Name = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, false);
                this.ReportPropertyChanged("Name");
                this.OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        /// <summary>
        /// There are no comments for Property SymbolRaw in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SymbolRaw
        {
            get
            {
                return global::System.Data.Objects.DataClasses.StructuralObject.GetValidValue(this._SymbolRaw);
            }
            set
            {
                this.OnSymbolRawChanging(value);
                this.ReportPropertyChanging("SymbolRaw");
                this._SymbolRaw = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, true);
                this.ReportPropertyChanged("SymbolRaw");
                this.OnSymbolRawChanged();
            }
        }
        private byte[] _SymbolRaw;
        partial void OnSymbolRawChanging(byte[] value);
        partial void OnSymbolRawChanged();
        /// <summary>
        /// There are no comments for Movies in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("MediaTek", "FK_movie_media_type_id_id", "movie")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityCollection<Movie> Movies
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Movie>("MediaTek.FK_movie_media_type_id_id", "movie");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Movie>("MediaTek.FK_movie_media_type_id_id", "movie", value);
                }
            }
        }
    }
    /// <summary>
    /// There are no comments for MediaTek.Movie in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::System.Data.Objects.DataClasses.EdmEntityTypeAttribute(NamespaceName="MediaTek", Name="Movie")]
    [global::System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
    [global::System.Serializable()]
    public partial class Movie : global::System.Data.Objects.DataClasses.EntityObject
    {
        /// <summary>
        /// Create a new Movie object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="title">Initial value of Title.</param>
        public static Movie CreateMovie(long id, string title)
        {
            Movie movie = new Movie();
            movie.Id = id;
            movie.Title = title;
            return movie;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this.ReportPropertyChanging("Id");
                this._Id = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("Id");
                this.OnIdChanged();
            }
        }
        private long _Id;
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Property Title in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                this.OnTitleChanging(value);
                this.ReportPropertyChanging("Title");
                this._Title = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, false);
                this.ReportPropertyChanged("Title");
                this.OnTitleChanged();
            }
        }
        private string _Title;
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
        /// <summary>
        /// There are no comments for Property Year in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public string Year
        {
            get
            {
                return this._Year;
            }
            set
            {
                this.OnYearChanging(value);
                this.ReportPropertyChanging("Year");
                this._Year = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, true);
                this.ReportPropertyChanged("Year");
                this.OnYearChanged();
            }
        }
        private string _Year;
        partial void OnYearChanging(string value);
        partial void OnYearChanged();
        /// <summary>
        /// There are no comments for Property OriginalTitle in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalTitle
        {
            get
            {
                return this._OriginalTitle;
            }
            set
            {
                this.OnOriginalTitleChanging(value);
                this.ReportPropertyChanging("OriginalTitle");
                this._OriginalTitle = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, true);
                this.ReportPropertyChanged("OriginalTitle");
                this.OnOriginalTitleChanged();
            }
        }
        private string _OriginalTitle;
        partial void OnOriginalTitleChanging(string value);
        partial void OnOriginalTitleChanged();
        /// <summary>
        /// There are no comments for Property CoverRaw in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] CoverRaw
        {
            get
            {
                return global::System.Data.Objects.DataClasses.StructuralObject.GetValidValue(this._CoverRaw);
            }
            set
            {
                this.OnCoverRawChanging(value);
                this.ReportPropertyChanging("CoverRaw");
                this._CoverRaw = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, true);
                this.ReportPropertyChanged("CoverRaw");
                this.OnCoverRawChanged();
            }
        }
        private byte[] _CoverRaw;
        partial void OnCoverRawChanging(byte[] value);
        partial void OnCoverRawChanged();
        /// <summary>
        /// There are no comments for Director in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("MediaTek", "FK_movie_director_id_id", "director")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public Director Director
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Director>("MediaTek.FK_movie_director_id_id", "director").Value;
            }
            set
            {
                ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Director>("MediaTek.FK_movie_director_id_id", "director").Value = value;
            }
        }
        /// <summary>
        /// There are no comments for Director in the schema.
        /// </summary>
        [global::System.ComponentModel.BrowsableAttribute(false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityReference<Director> DirectorReference
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Director>("MediaTek.FK_movie_director_id_id", "director");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Director>("MediaTek.FK_movie_director_id_id", "director", value);
                }
            }
        }
        /// <summary>
        /// There are no comments for Language in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("MediaTek", "FK_movie_language_id_id", "language")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public Language Language
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Language>("MediaTek.FK_movie_language_id_id", "language").Value;
            }
            set
            {
                ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Language>("MediaTek.FK_movie_language_id_id", "language").Value = value;
            }
        }
        /// <summary>
        /// There are no comments for Language in the schema.
        /// </summary>
        [global::System.ComponentModel.BrowsableAttribute(false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityReference<Language> LanguageReference
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Language>("MediaTek.FK_movie_language_id_id", "language");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Language>("MediaTek.FK_movie_language_id_id", "language", value);
                }
            }
        }
        /// <summary>
        /// There are no comments for Lends in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("MediaTek", "FK_lend_movie_id_id", "lend")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityCollection<Lend> Lends
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Lend>("MediaTek.FK_lend_movie_id_id", "lend");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Lend>("MediaTek.FK_lend_movie_id_id", "lend", value);
                }
            }
        }
        /// <summary>
        /// There are no comments for MediaType in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("MediaTek", "FK_movie_media_type_id_id", "media_type")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public MediaType MediaType
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<MediaType>("MediaTek.FK_movie_media_type_id_id", "media_type").Value;
            }
            set
            {
                ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<MediaType>("MediaTek.FK_movie_media_type_id_id", "media_type").Value = value;
            }
        }
        /// <summary>
        /// There are no comments for MediaType in the schema.
        /// </summary>
        [global::System.ComponentModel.BrowsableAttribute(false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityReference<MediaType> MediaTypeReference
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<MediaType>("MediaTek.FK_movie_media_type_id_id", "media_type");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<MediaType>("MediaTek.FK_movie_media_type_id_id", "media_type", value);
                }
            }
        }
    }
}
