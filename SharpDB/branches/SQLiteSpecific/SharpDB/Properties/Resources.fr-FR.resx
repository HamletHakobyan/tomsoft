<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplicationName" xml:space="preserve">
    <value>SharpDB</value>
  </data>
  <data name="confirm_delete_connection" xml:space="preserve">
    <value>Voulez-vous vraiment supprimer cette connexion ?</value>
  </data>
  <data name="confirm_delete_connection_title" xml:space="preserve">
    <value>Confirmer la suppression</value>
  </data>
  <data name="connection_default_name" xml:space="preserve">
    <value>Nouvelle connexion</value>
  </data>
  <data name="connect_database" xml:space="preserve">
    <value>Se connecter à la base de données</value>
  </data>
  <data name="delete_database_connection" xml:space="preserve">
    <value>Supprimer la connexion</value>
  </data>
  <data name="dialog_cancel" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="dialog_ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="disconnect_database" xml:space="preserve">
    <value>Se déconnecter de la base de données</value>
  </data>
  <data name="edit_database_connection" xml:space="preserve">
    <value>Modifier la connexion</value>
  </data>
  <data name="new_database_connection" xml:space="preserve">
    <value>Nouvelle connexion</value>
  </data>
  <data name="connection_name" xml:space="preserve">
    <value>Nom de la connexion</value>
  </data>
  <data name="connection_string" xml:space="preserve">
    <value>Chaine de connexion</value>
  </data>
  <data name="copy" xml:space="preserve">
    <value>Copier</value>
  </data>
  <data name="cut" xml:space="preserve">
    <value>Couper</value>
  </data>
  <data name="data_provider" xml:space="preserve">
    <value>Fournisseur de données</value>
  </data>
  <data name="execute_as_script" xml:space="preserve">
    <value>Exécuter toutes les instructions en tant que script</value>
  </data>
  <data name="execute_current" xml:space="preserve">
    <value>Exécuter l'instruction courante</value>
  </data>
  <data name="explain_plan" xml:space="preserve">
    <value>Plan d'exécution</value>
  </data>
  <data name="new_worksheet" xml:space="preserve">
    <value>Nouvelle feuille SQL</value>
  </data>
  <data name="new_worksheet_name_format" xml:space="preserve">
    <value>Sans titre {0}</value>
  </data>
  <data name="open_worksheet" xml:space="preserve">
    <value>Ouvrir une feuille SQL</value>
  </data>
  <data name="paste" xml:space="preserve">
    <value>Coller</value>
  </data>
  <data name="save_worksheet" xml:space="preserve">
    <value>Enregistrer la feuille SQL</value>
  </data>
  <data name="sql_file_filter_name" xml:space="preserve">
    <value>Fichiers SQL</value>
  </data>
  <data name="current_database" xml:space="preserve">
    <value>Base de données courante</value>
  </data>
  <data name="database_not_connected" xml:space="preserve">
    <value>Non connecté à la base de données</value>
  </data>
  <data name="no_database_selected" xml:space="preserve">
    <value>Aucune base de données n'est sélectionnée</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>Erreur</value>
  </data>
  <data name="query_error" xml:space="preserve">
    <value>Une erreur s'est produite lors de l'exécution de la requête :</value>
  </data>
  <data name="fetched_rows_complete_format" xml:space="preserve">
    <value>{0} lignes au total</value>
  </data>
  <data name="fetched_rows_incomplete_format" xml:space="preserve">
    <value>{0} lignes récupérées (défiler vers le bas pour récupérer les suivantes)</value>
  </data>
  <data name="query_output" xml:space="preserve">
    <value>Sortie</value>
  </data>
  <data name="query_results" xml:space="preserve">
    <value>Résultats</value>
  </data>
  <data name="affected_rows_format" xml:space="preserve">
    <value>{0} lignes affectées</value>
  </data>
  <data name="query_success" xml:space="preserve">
    <value>Requête exécutée avec succès</value>
  </data>
  <data name="confirmation" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="save_changes_before_close" xml:space="preserve">
    <value>Ce document a des modifications non enregistrées.  Voulez-vous les enregistrer maintenant ?</value>
  </data>
  <data name="jumplist_recent_databases" xml:space="preserve">
    <value>Bases de données récentes</value>
  </data>
  <data name="jumplist_recent_files" xml:space="preserve">
    <value>Fichiers récents</value>
  </data>
  <data name="column_datatype_format" xml:space="preserve">
    <value>Type : {0}</value>
  </data>
  <data name="ItemType_Column" xml:space="preserve">
    <value>Colonne</value>
  </data>
  <data name="ItemType_Index" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="ItemType_Table" xml:space="preserve">
    <value>Table</value>
  </data>
  <data name="refresh_model" xml:space="preserve">
    <value>Rafraichir la structure de la base</value>
  </data>
  <data name="column_default_value_format" xml:space="preserve">
    <value>Valeur par défaut : {0}</value>
  </data>
</root>