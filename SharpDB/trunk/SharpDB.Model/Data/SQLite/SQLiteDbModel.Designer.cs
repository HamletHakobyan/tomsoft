//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SharpDB.Model.Data.SQLite {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SQLiteDbSchema")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    internal partial class SQLiteDbModel : global::System.Data.DataSet {
        
        private CatalogsDataTable tableCatalogs;
        
        private TablesDataTable tableTables;
        
        private ColumnsDataTable tableColumns;
        
        private IndexesDataTable tableIndexes;
        
        private IndexColumnsDataTable tableIndexColumns;
        
        private ViewsDataTable tableViews;
        
        private ViewColumnsDataTable tableViewColumns;
        
        private ForeignKeysDataTable tableForeignKeys;
        
        private TriggersDataTable tableTriggers;
        
        private global::System.Data.DataRelation relationCatalogs_Tables;
        
        private global::System.Data.DataRelation relationTables_Columns;
        
        private global::System.Data.DataRelation relationColumns_IndexColumns;
        
        private global::System.Data.DataRelation relationTables_Indexes;
        
        private global::System.Data.DataRelation relationCatalogs_Indexes;
        
        private global::System.Data.DataRelation relationCatalogs_Views;
        
        private global::System.Data.DataRelation relationViews_ViewColumns;
        
        private global::System.Data.DataRelation relationIndexes_IndexColumns;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SQLiteDbModel() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected SQLiteDbModel(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Catalogs"] != null)) {
                    base.Tables.Add(new CatalogsDataTable(ds.Tables["Catalogs"]));
                }
                if ((ds.Tables["Tables"] != null)) {
                    base.Tables.Add(new TablesDataTable(ds.Tables["Tables"]));
                }
                if ((ds.Tables["Columns"] != null)) {
                    base.Tables.Add(new ColumnsDataTable(ds.Tables["Columns"]));
                }
                if ((ds.Tables["Indexes"] != null)) {
                    base.Tables.Add(new IndexesDataTable(ds.Tables["Indexes"]));
                }
                if ((ds.Tables["IndexColumns"] != null)) {
                    base.Tables.Add(new IndexColumnsDataTable(ds.Tables["IndexColumns"]));
                }
                if ((ds.Tables["Views"] != null)) {
                    base.Tables.Add(new ViewsDataTable(ds.Tables["Views"]));
                }
                if ((ds.Tables["ViewColumns"] != null)) {
                    base.Tables.Add(new ViewColumnsDataTable(ds.Tables["ViewColumns"]));
                }
                if ((ds.Tables["ForeignKeys"] != null)) {
                    base.Tables.Add(new ForeignKeysDataTable(ds.Tables["ForeignKeys"]));
                }
                if ((ds.Tables["Triggers"] != null)) {
                    base.Tables.Add(new TriggersDataTable(ds.Tables["Triggers"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CatalogsDataTable Catalogs {
            get {
                return this.tableCatalogs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TablesDataTable _Tables {
            get {
                return this.tableTables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ColumnsDataTable Columns {
            get {
                return this.tableColumns;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IndexesDataTable Indexes {
            get {
                return this.tableIndexes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IndexColumnsDataTable IndexColumns {
            get {
                return this.tableIndexColumns;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ViewsDataTable Views {
            get {
                return this.tableViews;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ViewColumnsDataTable ViewColumns {
            get {
                return this.tableViewColumns;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ForeignKeysDataTable ForeignKeys {
            get {
                return this.tableForeignKeys;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TriggersDataTable Triggers {
            get {
                return this.tableTriggers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            SQLiteDbModel cln = ((SQLiteDbModel)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Catalogs"] != null)) {
                    base.Tables.Add(new CatalogsDataTable(ds.Tables["Catalogs"]));
                }
                if ((ds.Tables["Tables"] != null)) {
                    base.Tables.Add(new TablesDataTable(ds.Tables["Tables"]));
                }
                if ((ds.Tables["Columns"] != null)) {
                    base.Tables.Add(new ColumnsDataTable(ds.Tables["Columns"]));
                }
                if ((ds.Tables["Indexes"] != null)) {
                    base.Tables.Add(new IndexesDataTable(ds.Tables["Indexes"]));
                }
                if ((ds.Tables["IndexColumns"] != null)) {
                    base.Tables.Add(new IndexColumnsDataTable(ds.Tables["IndexColumns"]));
                }
                if ((ds.Tables["Views"] != null)) {
                    base.Tables.Add(new ViewsDataTable(ds.Tables["Views"]));
                }
                if ((ds.Tables["ViewColumns"] != null)) {
                    base.Tables.Add(new ViewColumnsDataTable(ds.Tables["ViewColumns"]));
                }
                if ((ds.Tables["ForeignKeys"] != null)) {
                    base.Tables.Add(new ForeignKeysDataTable(ds.Tables["ForeignKeys"]));
                }
                if ((ds.Tables["Triggers"] != null)) {
                    base.Tables.Add(new TriggersDataTable(ds.Tables["Triggers"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableCatalogs = ((CatalogsDataTable)(base.Tables["Catalogs"]));
            if ((initTable == true)) {
                if ((this.tableCatalogs != null)) {
                    this.tableCatalogs.InitVars();
                }
            }
            this.tableTables = ((TablesDataTable)(base.Tables["Tables"]));
            if ((initTable == true)) {
                if ((this.tableTables != null)) {
                    this.tableTables.InitVars();
                }
            }
            this.tableColumns = ((ColumnsDataTable)(base.Tables["Columns"]));
            if ((initTable == true)) {
                if ((this.tableColumns != null)) {
                    this.tableColumns.InitVars();
                }
            }
            this.tableIndexes = ((IndexesDataTable)(base.Tables["Indexes"]));
            if ((initTable == true)) {
                if ((this.tableIndexes != null)) {
                    this.tableIndexes.InitVars();
                }
            }
            this.tableIndexColumns = ((IndexColumnsDataTable)(base.Tables["IndexColumns"]));
            if ((initTable == true)) {
                if ((this.tableIndexColumns != null)) {
                    this.tableIndexColumns.InitVars();
                }
            }
            this.tableViews = ((ViewsDataTable)(base.Tables["Views"]));
            if ((initTable == true)) {
                if ((this.tableViews != null)) {
                    this.tableViews.InitVars();
                }
            }
            this.tableViewColumns = ((ViewColumnsDataTable)(base.Tables["ViewColumns"]));
            if ((initTable == true)) {
                if ((this.tableViewColumns != null)) {
                    this.tableViewColumns.InitVars();
                }
            }
            this.tableForeignKeys = ((ForeignKeysDataTable)(base.Tables["ForeignKeys"]));
            if ((initTable == true)) {
                if ((this.tableForeignKeys != null)) {
                    this.tableForeignKeys.InitVars();
                }
            }
            this.tableTriggers = ((TriggersDataTable)(base.Tables["Triggers"]));
            if ((initTable == true)) {
                if ((this.tableTriggers != null)) {
                    this.tableTriggers.InitVars();
                }
            }
            this.relationCatalogs_Tables = this.Relations["Catalogs_Tables"];
            this.relationTables_Columns = this.Relations["Tables_Columns"];
            this.relationColumns_IndexColumns = this.Relations["Columns_IndexColumns"];
            this.relationTables_Indexes = this.Relations["Tables_Indexes"];
            this.relationCatalogs_Indexes = this.Relations["Catalogs_Indexes"];
            this.relationCatalogs_Views = this.Relations["Catalogs_Views"];
            this.relationViews_ViewColumns = this.Relations["Views_ViewColumns"];
            this.relationIndexes_IndexColumns = this.Relations["Indexes_IndexColumns"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "SQLiteDbSchema";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCatalogs = new CatalogsDataTable();
            base.Tables.Add(this.tableCatalogs);
            this.tableTables = new TablesDataTable();
            base.Tables.Add(this.tableTables);
            this.tableColumns = new ColumnsDataTable();
            base.Tables.Add(this.tableColumns);
            this.tableIndexes = new IndexesDataTable();
            base.Tables.Add(this.tableIndexes);
            this.tableIndexColumns = new IndexColumnsDataTable();
            base.Tables.Add(this.tableIndexColumns);
            this.tableViews = new ViewsDataTable();
            base.Tables.Add(this.tableViews);
            this.tableViewColumns = new ViewColumnsDataTable();
            base.Tables.Add(this.tableViewColumns);
            this.tableForeignKeys = new ForeignKeysDataTable();
            base.Tables.Add(this.tableForeignKeys);
            this.tableTriggers = new TriggersDataTable();
            base.Tables.Add(this.tableTriggers);
            this.relationCatalogs_Tables = new global::System.Data.DataRelation("Catalogs_Tables", new global::System.Data.DataColumn[] {
                        this.tableCatalogs.CATALOG_NAMEColumn}, new global::System.Data.DataColumn[] {
                        this.tableTables.TABLE_CATALOGColumn}, false);
            this.Relations.Add(this.relationCatalogs_Tables);
            this.relationTables_Columns = new global::System.Data.DataRelation("Tables_Columns", new global::System.Data.DataColumn[] {
                        this.tableTables.TABLE_CATALOGColumn,
                        this.tableTables.TABLE_SCHEMAColumn,
                        this.tableTables.TABLE_NAMEColumn}, new global::System.Data.DataColumn[] {
                        this.tableColumns.TABLE_CATALOGColumn,
                        this.tableColumns.TABLE_SCHEMAColumn,
                        this.tableColumns.TABLE_NAMEColumn}, false);
            this.Relations.Add(this.relationTables_Columns);
            this.relationColumns_IndexColumns = new global::System.Data.DataRelation("Columns_IndexColumns", new global::System.Data.DataColumn[] {
                        this.tableColumns.TABLE_CATALOGColumn,
                        this.tableColumns.TABLE_SCHEMAColumn,
                        this.tableColumns.TABLE_NAMEColumn,
                        this.tableColumns.COLUMN_NAMEColumn}, new global::System.Data.DataColumn[] {
                        this.tableIndexColumns.TABLE_CATALOGColumn,
                        this.tableIndexColumns.TABLE_SCHEMAColumn,
                        this.tableIndexColumns.TABLE_NAMEColumn,
                        this.tableIndexColumns.COLUMN_NAMEColumn}, false);
            this.Relations.Add(this.relationColumns_IndexColumns);
            this.relationTables_Indexes = new global::System.Data.DataRelation("Tables_Indexes", new global::System.Data.DataColumn[] {
                        this.tableTables.TABLE_CATALOGColumn,
                        this.tableTables.TABLE_SCHEMAColumn,
                        this.tableTables.TABLE_NAMEColumn}, new global::System.Data.DataColumn[] {
                        this.tableIndexes.TABLE_CATALOGColumn,
                        this.tableIndexes.TABLE_SCHEMAColumn,
                        this.tableIndexes.TABLE_NAMEColumn}, false);
            this.Relations.Add(this.relationTables_Indexes);
            this.relationCatalogs_Indexes = new global::System.Data.DataRelation("Catalogs_Indexes", new global::System.Data.DataColumn[] {
                        this.tableCatalogs.CATALOG_NAMEColumn}, new global::System.Data.DataColumn[] {
                        this.tableIndexes.INDEX_CATALOGColumn}, false);
            this.Relations.Add(this.relationCatalogs_Indexes);
            this.relationCatalogs_Views = new global::System.Data.DataRelation("Catalogs_Views", new global::System.Data.DataColumn[] {
                        this.tableCatalogs.CATALOG_NAMEColumn}, new global::System.Data.DataColumn[] {
                        this.tableViews.TABLE_CATALOGColumn}, false);
            this.Relations.Add(this.relationCatalogs_Views);
            this.relationViews_ViewColumns = new global::System.Data.DataRelation("Views_ViewColumns", new global::System.Data.DataColumn[] {
                        this.tableViews.TABLE_CATALOGColumn,
                        this.tableViews.TABLE_NAMEColumn,
                        this.tableViews.TABLE_SCHEMAColumn}, new global::System.Data.DataColumn[] {
                        this.tableViewColumns.VIEW_CATALOGColumn,
                        this.tableViewColumns.VIEW_SCHEMAColumn,
                        this.tableViewColumns.VIEW_NAMEColumn}, false);
            this.Relations.Add(this.relationViews_ViewColumns);
            this.relationIndexes_IndexColumns = new global::System.Data.DataRelation("Indexes_IndexColumns", new global::System.Data.DataColumn[] {
                        this.tableIndexes.INDEX_CATALOGColumn,
                        this.tableIndexes.INDEX_SCHEMAColumn,
                        this.tableIndexes.INDEX_NAMEColumn}, new global::System.Data.DataColumn[] {
                        this.tableIndexColumns.CONSTRAINT_CATALOGColumn,
                        this.tableIndexColumns.CONSTRAINT_SCHEMAColumn,
                        this.tableIndexColumns.INDEX_NAMEColumn}, false);
            this.Relations.Add(this.relationIndexes_IndexColumns);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCatalogs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerialize_Tables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeColumns() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeIndexes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeIndexColumns() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeViews() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeViewColumns() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeForeignKeys() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTriggers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SQLiteDbModel ds = new SQLiteDbModel();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CatalogsRowChangeEventHandler(object sender, CatalogsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TablesRowChangeEventHandler(object sender, TablesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ColumnsRowChangeEventHandler(object sender, ColumnsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void IndexesRowChangeEventHandler(object sender, IndexesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void IndexColumnsRowChangeEventHandler(object sender, IndexColumnsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ViewsRowChangeEventHandler(object sender, ViewsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ViewColumnsRowChangeEventHandler(object sender, ViewColumnsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ForeignKeysRowChangeEventHandler(object sender, ForeignKeysRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TriggersRowChangeEventHandler(object sender, TriggersRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CatalogsDataTable : global::System.Data.TypedTableBase<CatalogsRow> {
            
            private global::System.Data.DataColumn columnCATALOG_NAME;
            
            private global::System.Data.DataColumn columnDESCRIPTION;
            
            private global::System.Data.DataColumn columnID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CatalogsDataTable() {
                this.TableName = "Catalogs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CatalogsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CatalogsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CATALOG_NAMEColumn {
                get {
                    return this.columnCATALOG_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DESCRIPTIONColumn {
                get {
                    return this.columnDESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CatalogsRow this[int index] {
                get {
                    return ((CatalogsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CatalogsRowChangeEventHandler CatalogsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CatalogsRowChangeEventHandler CatalogsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CatalogsRowChangeEventHandler CatalogsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CatalogsRowChangeEventHandler CatalogsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCatalogsRow(CatalogsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CatalogsRow AddCatalogsRow(string CATALOG_NAME, string DESCRIPTION, long ID) {
                CatalogsRow rowCatalogsRow = ((CatalogsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CATALOG_NAME,
                        DESCRIPTION,
                        ID};
                rowCatalogsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCatalogsRow);
                return rowCatalogsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CatalogsRow FindByCATALOG_NAME(string CATALOG_NAME) {
                return ((CatalogsRow)(this.Rows.Find(new object[] {
                            CATALOG_NAME})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CatalogsDataTable cln = ((CatalogsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CatalogsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCATALOG_NAME = base.Columns["CATALOG_NAME"];
                this.columnDESCRIPTION = base.Columns["DESCRIPTION"];
                this.columnID = base.Columns["ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCATALOG_NAME = new global::System.Data.DataColumn("CATALOG_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCATALOG_NAME);
                this.columnDESCRIPTION = new global::System.Data.DataColumn("DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCATALOG_NAME}, true));
                this.columnCATALOG_NAME.AllowDBNull = false;
                this.columnCATALOG_NAME.Unique = true;
                this.Locale = new global::System.Globalization.CultureInfo("");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CatalogsRow NewCatalogsRow() {
                return ((CatalogsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CatalogsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CatalogsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CatalogsRowChanged != null)) {
                    this.CatalogsRowChanged(this, new CatalogsRowChangeEvent(((CatalogsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CatalogsRowChanging != null)) {
                    this.CatalogsRowChanging(this, new CatalogsRowChangeEvent(((CatalogsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CatalogsRowDeleted != null)) {
                    this.CatalogsRowDeleted(this, new CatalogsRowChangeEvent(((CatalogsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CatalogsRowDeleting != null)) {
                    this.CatalogsRowDeleting(this, new CatalogsRowChangeEvent(((CatalogsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCatalogsRow(CatalogsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SQLiteDbModel ds = new SQLiteDbModel();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CatalogsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TablesDataTable : global::System.Data.TypedTableBase<TablesRow> {
            
            private global::System.Data.DataColumn columnTABLE_CATALOG;
            
            private global::System.Data.DataColumn columnTABLE_SCHEMA;
            
            private global::System.Data.DataColumn columnTABLE_NAME;
            
            private global::System.Data.DataColumn columnTABLE_TYPE;
            
            private global::System.Data.DataColumn columnTABLE_ID;
            
            private global::System.Data.DataColumn columnTABLE_ROOTPAGE;
            
            private global::System.Data.DataColumn columnTABLE_DEFINITION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TablesDataTable() {
                this.TableName = "Tables";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TablesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TablesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_CATALOGColumn {
                get {
                    return this.columnTABLE_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_SCHEMAColumn {
                get {
                    return this.columnTABLE_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_NAMEColumn {
                get {
                    return this.columnTABLE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_TYPEColumn {
                get {
                    return this.columnTABLE_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_IDColumn {
                get {
                    return this.columnTABLE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_ROOTPAGEColumn {
                get {
                    return this.columnTABLE_ROOTPAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_DEFINITIONColumn {
                get {
                    return this.columnTABLE_DEFINITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TablesRow this[int index] {
                get {
                    return ((TablesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TablesRowChangeEventHandler TablesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TablesRowChangeEventHandler TablesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TablesRowChangeEventHandler TablesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TablesRowChangeEventHandler TablesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTablesRow(TablesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TablesRow AddTablesRow(CatalogsRow parentCatalogsRowByCatalogs_Tables, string TABLE_SCHEMA, string TABLE_NAME, string TABLE_TYPE, long TABLE_ID, int TABLE_ROOTPAGE, string TABLE_DEFINITION) {
                TablesRow rowTablesRow = ((TablesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TABLE_SCHEMA,
                        TABLE_NAME,
                        TABLE_TYPE,
                        TABLE_ID,
                        TABLE_ROOTPAGE,
                        TABLE_DEFINITION};
                if ((parentCatalogsRowByCatalogs_Tables != null)) {
                    columnValuesArray[0] = parentCatalogsRowByCatalogs_Tables[0];
                }
                rowTablesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTablesRow);
                return rowTablesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TablesRow FindByTABLE_CATALOGTABLE_SCHEMATABLE_NAME(string TABLE_CATALOG, string TABLE_SCHEMA, string TABLE_NAME) {
                return ((TablesRow)(this.Rows.Find(new object[] {
                            TABLE_CATALOG,
                            TABLE_SCHEMA,
                            TABLE_NAME})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TablesDataTable cln = ((TablesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TablesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnTABLE_CATALOG = base.Columns["TABLE_CATALOG"];
                this.columnTABLE_SCHEMA = base.Columns["TABLE_SCHEMA"];
                this.columnTABLE_NAME = base.Columns["TABLE_NAME"];
                this.columnTABLE_TYPE = base.Columns["TABLE_TYPE"];
                this.columnTABLE_ID = base.Columns["TABLE_ID"];
                this.columnTABLE_ROOTPAGE = base.Columns["TABLE_ROOTPAGE"];
                this.columnTABLE_DEFINITION = base.Columns["TABLE_DEFINITION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnTABLE_CATALOG = new global::System.Data.DataColumn("TABLE_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_CATALOG);
                this.columnTABLE_SCHEMA = new global::System.Data.DataColumn("TABLE_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_SCHEMA);
                this.columnTABLE_NAME = new global::System.Data.DataColumn("TABLE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_NAME);
                this.columnTABLE_TYPE = new global::System.Data.DataColumn("TABLE_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_TYPE);
                this.columnTABLE_ID = new global::System.Data.DataColumn("TABLE_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_ID);
                this.columnTABLE_ROOTPAGE = new global::System.Data.DataColumn("TABLE_ROOTPAGE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_ROOTPAGE);
                this.columnTABLE_DEFINITION = new global::System.Data.DataColumn("TABLE_DEFINITION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_DEFINITION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTABLE_CATALOG,
                                this.columnTABLE_SCHEMA,
                                this.columnTABLE_NAME}, true));
                this.columnTABLE_CATALOG.AllowDBNull = false;
                this.columnTABLE_SCHEMA.AllowDBNull = false;
                this.columnTABLE_NAME.AllowDBNull = false;
                this.Locale = new global::System.Globalization.CultureInfo("");
                this.ExtendedProperties.Add("Generator_TablePropName", "_Tables");
                this.ExtendedProperties.Add("Generator_UserTableName", "Tables");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TablesRow NewTablesRow() {
                return ((TablesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TablesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TablesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TablesRowChanged != null)) {
                    this.TablesRowChanged(this, new TablesRowChangeEvent(((TablesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TablesRowChanging != null)) {
                    this.TablesRowChanging(this, new TablesRowChangeEvent(((TablesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TablesRowDeleted != null)) {
                    this.TablesRowDeleted(this, new TablesRowChangeEvent(((TablesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TablesRowDeleting != null)) {
                    this.TablesRowDeleting(this, new TablesRowChangeEvent(((TablesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTablesRow(TablesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SQLiteDbModel ds = new SQLiteDbModel();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TablesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ColumnsDataTable : global::System.Data.TypedTableBase<ColumnsRow> {
            
            private global::System.Data.DataColumn columnTABLE_CATALOG;
            
            private global::System.Data.DataColumn columnTABLE_SCHEMA;
            
            private global::System.Data.DataColumn columnTABLE_NAME;
            
            private global::System.Data.DataColumn columnCOLUMN_NAME;
            
            private global::System.Data.DataColumn columnCOLUMN_GUID;
            
            private global::System.Data.DataColumn columnCOLUMN_PROPID;
            
            private global::System.Data.DataColumn columnORDINAL_POSITION;
            
            private global::System.Data.DataColumn columnCOLUMN_HASDEFAULT;
            
            private global::System.Data.DataColumn columnCOLUMN_DEFAULT;
            
            private global::System.Data.DataColumn columnCOLUMN_FLAGS;
            
            private global::System.Data.DataColumn columnIS_NULLABLE;
            
            private global::System.Data.DataColumn columnDATA_TYPE;
            
            private global::System.Data.DataColumn columnTYPE_GUID;
            
            private global::System.Data.DataColumn columnCHARACTER_MAXIMUM_LENGTH;
            
            private global::System.Data.DataColumn columnCHARACTER_OCTET_LENGTH;
            
            private global::System.Data.DataColumn columnNUMERIC_PRECISION;
            
            private global::System.Data.DataColumn columnNUMERIC_SCALE;
            
            private global::System.Data.DataColumn columnDATETIME_PRECISION;
            
            private global::System.Data.DataColumn columnCHARACTER_SET_CATALOG;
            
            private global::System.Data.DataColumn columnCHARACTER_SET_SCHEMA;
            
            private global::System.Data.DataColumn columnCHARACTER_SET_NAME;
            
            private global::System.Data.DataColumn columnCOLLATION_CATALOG;
            
            private global::System.Data.DataColumn columnCOLLATION_SCHEMA;
            
            private global::System.Data.DataColumn columnCOLLATION_NAME;
            
            private global::System.Data.DataColumn columnDOMAIN_CATALOG;
            
            private global::System.Data.DataColumn columnDOMAIN_NAME;
            
            private global::System.Data.DataColumn columnDESCRIPTION;
            
            private global::System.Data.DataColumn columnPRIMARY_KEY;
            
            private global::System.Data.DataColumn columnEDM_TYPE;
            
            private global::System.Data.DataColumn columnAUTOINCREMENT;
            
            private global::System.Data.DataColumn columnUNIQUE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ColumnsDataTable() {
                this.TableName = "Columns";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ColumnsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ColumnsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_CATALOGColumn {
                get {
                    return this.columnTABLE_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_SCHEMAColumn {
                get {
                    return this.columnTABLE_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_NAMEColumn {
                get {
                    return this.columnTABLE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLUMN_NAMEColumn {
                get {
                    return this.columnCOLUMN_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLUMN_GUIDColumn {
                get {
                    return this.columnCOLUMN_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLUMN_PROPIDColumn {
                get {
                    return this.columnCOLUMN_PROPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ORDINAL_POSITIONColumn {
                get {
                    return this.columnORDINAL_POSITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLUMN_HASDEFAULTColumn {
                get {
                    return this.columnCOLUMN_HASDEFAULT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLUMN_DEFAULTColumn {
                get {
                    return this.columnCOLUMN_DEFAULT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLUMN_FLAGSColumn {
                get {
                    return this.columnCOLUMN_FLAGS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IS_NULLABLEColumn {
                get {
                    return this.columnIS_NULLABLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DATA_TYPEColumn {
                get {
                    return this.columnDATA_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TYPE_GUIDColumn {
                get {
                    return this.columnTYPE_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHARACTER_MAXIMUM_LENGTHColumn {
                get {
                    return this.columnCHARACTER_MAXIMUM_LENGTH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHARACTER_OCTET_LENGTHColumn {
                get {
                    return this.columnCHARACTER_OCTET_LENGTH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUMERIC_PRECISIONColumn {
                get {
                    return this.columnNUMERIC_PRECISION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUMERIC_SCALEColumn {
                get {
                    return this.columnNUMERIC_SCALE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DATETIME_PRECISIONColumn {
                get {
                    return this.columnDATETIME_PRECISION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHARACTER_SET_CATALOGColumn {
                get {
                    return this.columnCHARACTER_SET_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHARACTER_SET_SCHEMAColumn {
                get {
                    return this.columnCHARACTER_SET_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHARACTER_SET_NAMEColumn {
                get {
                    return this.columnCHARACTER_SET_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLLATION_CATALOGColumn {
                get {
                    return this.columnCOLLATION_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLLATION_SCHEMAColumn {
                get {
                    return this.columnCOLLATION_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLLATION_NAMEColumn {
                get {
                    return this.columnCOLLATION_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DOMAIN_CATALOGColumn {
                get {
                    return this.columnDOMAIN_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DOMAIN_NAMEColumn {
                get {
                    return this.columnDOMAIN_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DESCRIPTIONColumn {
                get {
                    return this.columnDESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PRIMARY_KEYColumn {
                get {
                    return this.columnPRIMARY_KEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EDM_TYPEColumn {
                get {
                    return this.columnEDM_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AUTOINCREMENTColumn {
                get {
                    return this.columnAUTOINCREMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UNIQUEColumn {
                get {
                    return this.columnUNIQUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ColumnsRow this[int index] {
                get {
                    return ((ColumnsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ColumnsRowChangeEventHandler ColumnsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ColumnsRowChangeEventHandler ColumnsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ColumnsRowChangeEventHandler ColumnsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ColumnsRowChangeEventHandler ColumnsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddColumnsRow(ColumnsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ColumnsRow AddColumnsRow(
                        string TABLE_CATALOG, 
                        string TABLE_SCHEMA, 
                        string TABLE_NAME, 
                        string COLUMN_NAME, 
                        System.Guid COLUMN_GUID, 
                        long COLUMN_PROPID, 
                        int ORDINAL_POSITION, 
                        bool COLUMN_HASDEFAULT, 
                        string COLUMN_DEFAULT, 
                        long COLUMN_FLAGS, 
                        bool IS_NULLABLE, 
                        string DATA_TYPE, 
                        System.Guid TYPE_GUID, 
                        int CHARACTER_MAXIMUM_LENGTH, 
                        int CHARACTER_OCTET_LENGTH, 
                        int NUMERIC_PRECISION, 
                        int NUMERIC_SCALE, 
                        long DATETIME_PRECISION, 
                        string CHARACTER_SET_CATALOG, 
                        string CHARACTER_SET_SCHEMA, 
                        string CHARACTER_SET_NAME, 
                        string COLLATION_CATALOG, 
                        string COLLATION_SCHEMA, 
                        string COLLATION_NAME, 
                        string DOMAIN_CATALOG, 
                        string DOMAIN_NAME, 
                        string DESCRIPTION, 
                        bool PRIMARY_KEY, 
                        string EDM_TYPE, 
                        bool AUTOINCREMENT, 
                        bool UNIQUE) {
                ColumnsRow rowColumnsRow = ((ColumnsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TABLE_CATALOG,
                        TABLE_SCHEMA,
                        TABLE_NAME,
                        COLUMN_NAME,
                        COLUMN_GUID,
                        COLUMN_PROPID,
                        ORDINAL_POSITION,
                        COLUMN_HASDEFAULT,
                        COLUMN_DEFAULT,
                        COLUMN_FLAGS,
                        IS_NULLABLE,
                        DATA_TYPE,
                        TYPE_GUID,
                        CHARACTER_MAXIMUM_LENGTH,
                        CHARACTER_OCTET_LENGTH,
                        NUMERIC_PRECISION,
                        NUMERIC_SCALE,
                        DATETIME_PRECISION,
                        CHARACTER_SET_CATALOG,
                        CHARACTER_SET_SCHEMA,
                        CHARACTER_SET_NAME,
                        COLLATION_CATALOG,
                        COLLATION_SCHEMA,
                        COLLATION_NAME,
                        DOMAIN_CATALOG,
                        DOMAIN_NAME,
                        DESCRIPTION,
                        PRIMARY_KEY,
                        EDM_TYPE,
                        AUTOINCREMENT,
                        UNIQUE};
                rowColumnsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowColumnsRow);
                return rowColumnsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ColumnsRow FindByTABLE_CATALOGTABLE_SCHEMATABLE_NAMECOLUMN_NAME(string TABLE_CATALOG, string TABLE_SCHEMA, string TABLE_NAME, string COLUMN_NAME) {
                return ((ColumnsRow)(this.Rows.Find(new object[] {
                            TABLE_CATALOG,
                            TABLE_SCHEMA,
                            TABLE_NAME,
                            COLUMN_NAME})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ColumnsDataTable cln = ((ColumnsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ColumnsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnTABLE_CATALOG = base.Columns["TABLE_CATALOG"];
                this.columnTABLE_SCHEMA = base.Columns["TABLE_SCHEMA"];
                this.columnTABLE_NAME = base.Columns["TABLE_NAME"];
                this.columnCOLUMN_NAME = base.Columns["COLUMN_NAME"];
                this.columnCOLUMN_GUID = base.Columns["COLUMN_GUID"];
                this.columnCOLUMN_PROPID = base.Columns["COLUMN_PROPID"];
                this.columnORDINAL_POSITION = base.Columns["ORDINAL_POSITION"];
                this.columnCOLUMN_HASDEFAULT = base.Columns["COLUMN_HASDEFAULT"];
                this.columnCOLUMN_DEFAULT = base.Columns["COLUMN_DEFAULT"];
                this.columnCOLUMN_FLAGS = base.Columns["COLUMN_FLAGS"];
                this.columnIS_NULLABLE = base.Columns["IS_NULLABLE"];
                this.columnDATA_TYPE = base.Columns["DATA_TYPE"];
                this.columnTYPE_GUID = base.Columns["TYPE_GUID"];
                this.columnCHARACTER_MAXIMUM_LENGTH = base.Columns["CHARACTER_MAXIMUM_LENGTH"];
                this.columnCHARACTER_OCTET_LENGTH = base.Columns["CHARACTER_OCTET_LENGTH"];
                this.columnNUMERIC_PRECISION = base.Columns["NUMERIC_PRECISION"];
                this.columnNUMERIC_SCALE = base.Columns["NUMERIC_SCALE"];
                this.columnDATETIME_PRECISION = base.Columns["DATETIME_PRECISION"];
                this.columnCHARACTER_SET_CATALOG = base.Columns["CHARACTER_SET_CATALOG"];
                this.columnCHARACTER_SET_SCHEMA = base.Columns["CHARACTER_SET_SCHEMA"];
                this.columnCHARACTER_SET_NAME = base.Columns["CHARACTER_SET_NAME"];
                this.columnCOLLATION_CATALOG = base.Columns["COLLATION_CATALOG"];
                this.columnCOLLATION_SCHEMA = base.Columns["COLLATION_SCHEMA"];
                this.columnCOLLATION_NAME = base.Columns["COLLATION_NAME"];
                this.columnDOMAIN_CATALOG = base.Columns["DOMAIN_CATALOG"];
                this.columnDOMAIN_NAME = base.Columns["DOMAIN_NAME"];
                this.columnDESCRIPTION = base.Columns["DESCRIPTION"];
                this.columnPRIMARY_KEY = base.Columns["PRIMARY_KEY"];
                this.columnEDM_TYPE = base.Columns["EDM_TYPE"];
                this.columnAUTOINCREMENT = base.Columns["AUTOINCREMENT"];
                this.columnUNIQUE = base.Columns["UNIQUE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnTABLE_CATALOG = new global::System.Data.DataColumn("TABLE_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_CATALOG);
                this.columnTABLE_SCHEMA = new global::System.Data.DataColumn("TABLE_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_SCHEMA);
                this.columnTABLE_NAME = new global::System.Data.DataColumn("TABLE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_NAME);
                this.columnCOLUMN_NAME = new global::System.Data.DataColumn("COLUMN_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLUMN_NAME);
                this.columnCOLUMN_GUID = new global::System.Data.DataColumn("COLUMN_GUID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLUMN_GUID);
                this.columnCOLUMN_PROPID = new global::System.Data.DataColumn("COLUMN_PROPID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLUMN_PROPID);
                this.columnORDINAL_POSITION = new global::System.Data.DataColumn("ORDINAL_POSITION", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDINAL_POSITION);
                this.columnCOLUMN_HASDEFAULT = new global::System.Data.DataColumn("COLUMN_HASDEFAULT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLUMN_HASDEFAULT);
                this.columnCOLUMN_DEFAULT = new global::System.Data.DataColumn("COLUMN_DEFAULT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLUMN_DEFAULT);
                this.columnCOLUMN_FLAGS = new global::System.Data.DataColumn("COLUMN_FLAGS", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLUMN_FLAGS);
                this.columnIS_NULLABLE = new global::System.Data.DataColumn("IS_NULLABLE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_NULLABLE);
                this.columnDATA_TYPE = new global::System.Data.DataColumn("DATA_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA_TYPE);
                this.columnTYPE_GUID = new global::System.Data.DataColumn("TYPE_GUID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_GUID);
                this.columnCHARACTER_MAXIMUM_LENGTH = new global::System.Data.DataColumn("CHARACTER_MAXIMUM_LENGTH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHARACTER_MAXIMUM_LENGTH);
                this.columnCHARACTER_OCTET_LENGTH = new global::System.Data.DataColumn("CHARACTER_OCTET_LENGTH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHARACTER_OCTET_LENGTH);
                this.columnNUMERIC_PRECISION = new global::System.Data.DataColumn("NUMERIC_PRECISION", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMERIC_PRECISION);
                this.columnNUMERIC_SCALE = new global::System.Data.DataColumn("NUMERIC_SCALE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMERIC_SCALE);
                this.columnDATETIME_PRECISION = new global::System.Data.DataColumn("DATETIME_PRECISION", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATETIME_PRECISION);
                this.columnCHARACTER_SET_CATALOG = new global::System.Data.DataColumn("CHARACTER_SET_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHARACTER_SET_CATALOG);
                this.columnCHARACTER_SET_SCHEMA = new global::System.Data.DataColumn("CHARACTER_SET_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHARACTER_SET_SCHEMA);
                this.columnCHARACTER_SET_NAME = new global::System.Data.DataColumn("CHARACTER_SET_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHARACTER_SET_NAME);
                this.columnCOLLATION_CATALOG = new global::System.Data.DataColumn("COLLATION_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLLATION_CATALOG);
                this.columnCOLLATION_SCHEMA = new global::System.Data.DataColumn("COLLATION_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLLATION_SCHEMA);
                this.columnCOLLATION_NAME = new global::System.Data.DataColumn("COLLATION_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLLATION_NAME);
                this.columnDOMAIN_CATALOG = new global::System.Data.DataColumn("DOMAIN_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOMAIN_CATALOG);
                this.columnDOMAIN_NAME = new global::System.Data.DataColumn("DOMAIN_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOMAIN_NAME);
                this.columnDESCRIPTION = new global::System.Data.DataColumn("DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION);
                this.columnPRIMARY_KEY = new global::System.Data.DataColumn("PRIMARY_KEY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRIMARY_KEY);
                this.columnEDM_TYPE = new global::System.Data.DataColumn("EDM_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDM_TYPE);
                this.columnAUTOINCREMENT = new global::System.Data.DataColumn("AUTOINCREMENT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTOINCREMENT);
                this.columnUNIQUE = new global::System.Data.DataColumn("UNIQUE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIQUE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTABLE_CATALOG,
                                this.columnTABLE_SCHEMA,
                                this.columnTABLE_NAME,
                                this.columnCOLUMN_NAME}, true));
                this.columnTABLE_CATALOG.AllowDBNull = false;
                this.columnTABLE_SCHEMA.AllowDBNull = false;
                this.columnTABLE_NAME.AllowDBNull = false;
                this.columnCOLUMN_NAME.AllowDBNull = false;
                this.Locale = new global::System.Globalization.CultureInfo("");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ColumnsRow NewColumnsRow() {
                return ((ColumnsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ColumnsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ColumnsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ColumnsRowChanged != null)) {
                    this.ColumnsRowChanged(this, new ColumnsRowChangeEvent(((ColumnsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ColumnsRowChanging != null)) {
                    this.ColumnsRowChanging(this, new ColumnsRowChangeEvent(((ColumnsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ColumnsRowDeleted != null)) {
                    this.ColumnsRowDeleted(this, new ColumnsRowChangeEvent(((ColumnsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ColumnsRowDeleting != null)) {
                    this.ColumnsRowDeleting(this, new ColumnsRowChangeEvent(((ColumnsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveColumnsRow(ColumnsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SQLiteDbModel ds = new SQLiteDbModel();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ColumnsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IndexesDataTable : global::System.Data.TypedTableBase<IndexesRow> {
            
            private global::System.Data.DataColumn columnTABLE_CATALOG;
            
            private global::System.Data.DataColumn columnTABLE_SCHEMA;
            
            private global::System.Data.DataColumn columnTABLE_NAME;
            
            private global::System.Data.DataColumn columnINDEX_CATALOG;
            
            private global::System.Data.DataColumn columnINDEX_SCHEMA;
            
            private global::System.Data.DataColumn columnINDEX_NAME;
            
            private global::System.Data.DataColumn columnPRIMARY_KEY;
            
            private global::System.Data.DataColumn columnUNIQUE;
            
            private global::System.Data.DataColumn columnCLUSTERED;
            
            private global::System.Data.DataColumn columnTYPE;
            
            private global::System.Data.DataColumn columnFILL_FACTOR;
            
            private global::System.Data.DataColumn columnINITIAL_SIZE;
            
            private global::System.Data.DataColumn columnNULLS;
            
            private global::System.Data.DataColumn columnSORT_BOOKMARKS;
            
            private global::System.Data.DataColumn columnAUTO_UPDATE;
            
            private global::System.Data.DataColumn columnNULL_COLLATION;
            
            private global::System.Data.DataColumn columnORDINAL_POSITION;
            
            private global::System.Data.DataColumn columnCOLUMN_NAME;
            
            private global::System.Data.DataColumn columnCOLUMN_GUID;
            
            private global::System.Data.DataColumn columnCOLUMN_PROPID;
            
            private global::System.Data.DataColumn columnCOLLATION;
            
            private global::System.Data.DataColumn columnCARDINALITY;
            
            private global::System.Data.DataColumn columnPAGES;
            
            private global::System.Data.DataColumn columnFILTER_CONDITION;
            
            private global::System.Data.DataColumn columnINTEGRATED;
            
            private global::System.Data.DataColumn columnINDEX_DEFINITION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndexesDataTable() {
                this.TableName = "Indexes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal IndexesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected IndexesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_CATALOGColumn {
                get {
                    return this.columnTABLE_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_SCHEMAColumn {
                get {
                    return this.columnTABLE_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_NAMEColumn {
                get {
                    return this.columnTABLE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INDEX_CATALOGColumn {
                get {
                    return this.columnINDEX_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INDEX_SCHEMAColumn {
                get {
                    return this.columnINDEX_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INDEX_NAMEColumn {
                get {
                    return this.columnINDEX_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PRIMARY_KEYColumn {
                get {
                    return this.columnPRIMARY_KEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UNIQUEColumn {
                get {
                    return this.columnUNIQUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CLUSTEREDColumn {
                get {
                    return this.columnCLUSTERED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TYPEColumn {
                get {
                    return this.columnTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FILL_FACTORColumn {
                get {
                    return this.columnFILL_FACTOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INITIAL_SIZEColumn {
                get {
                    return this.columnINITIAL_SIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NULLSColumn {
                get {
                    return this.columnNULLS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SORT_BOOKMARKSColumn {
                get {
                    return this.columnSORT_BOOKMARKS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AUTO_UPDATEColumn {
                get {
                    return this.columnAUTO_UPDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NULL_COLLATIONColumn {
                get {
                    return this.columnNULL_COLLATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ORDINAL_POSITIONColumn {
                get {
                    return this.columnORDINAL_POSITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLUMN_NAMEColumn {
                get {
                    return this.columnCOLUMN_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLUMN_GUIDColumn {
                get {
                    return this.columnCOLUMN_GUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLUMN_PROPIDColumn {
                get {
                    return this.columnCOLUMN_PROPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLLATIONColumn {
                get {
                    return this.columnCOLLATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CARDINALITYColumn {
                get {
                    return this.columnCARDINALITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PAGESColumn {
                get {
                    return this.columnPAGES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FILTER_CONDITIONColumn {
                get {
                    return this.columnFILTER_CONDITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INTEGRATEDColumn {
                get {
                    return this.columnINTEGRATED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INDEX_DEFINITIONColumn {
                get {
                    return this.columnINDEX_DEFINITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndexesRow this[int index] {
                get {
                    return ((IndexesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event IndexesRowChangeEventHandler IndexesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event IndexesRowChangeEventHandler IndexesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event IndexesRowChangeEventHandler IndexesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event IndexesRowChangeEventHandler IndexesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddIndexesRow(IndexesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndexesRow AddIndexesRow(
                        string TABLE_CATALOG, 
                        string TABLE_SCHEMA, 
                        string TABLE_NAME, 
                        CatalogsRow parentCatalogsRowByCatalogs_Indexes, 
                        string INDEX_SCHEMA, 
                        string INDEX_NAME, 
                        bool PRIMARY_KEY, 
                        bool UNIQUE, 
                        bool CLUSTERED, 
                        int TYPE, 
                        int FILL_FACTOR, 
                        int INITIAL_SIZE, 
                        int NULLS, 
                        bool SORT_BOOKMARKS, 
                        bool AUTO_UPDATE, 
                        int NULL_COLLATION, 
                        int ORDINAL_POSITION, 
                        string COLUMN_NAME, 
                        System.Guid COLUMN_GUID, 
                        long COLUMN_PROPID, 
                        short COLLATION, 
                        decimal CARDINALITY, 
                        int PAGES, 
                        string FILTER_CONDITION, 
                        bool INTEGRATED, 
                        string INDEX_DEFINITION) {
                IndexesRow rowIndexesRow = ((IndexesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TABLE_CATALOG,
                        TABLE_SCHEMA,
                        TABLE_NAME,
                        null,
                        INDEX_SCHEMA,
                        INDEX_NAME,
                        PRIMARY_KEY,
                        UNIQUE,
                        CLUSTERED,
                        TYPE,
                        FILL_FACTOR,
                        INITIAL_SIZE,
                        NULLS,
                        SORT_BOOKMARKS,
                        AUTO_UPDATE,
                        NULL_COLLATION,
                        ORDINAL_POSITION,
                        COLUMN_NAME,
                        COLUMN_GUID,
                        COLUMN_PROPID,
                        COLLATION,
                        CARDINALITY,
                        PAGES,
                        FILTER_CONDITION,
                        INTEGRATED,
                        INDEX_DEFINITION};
                if ((parentCatalogsRowByCatalogs_Indexes != null)) {
                    columnValuesArray[3] = parentCatalogsRowByCatalogs_Indexes[0];
                }
                rowIndexesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIndexesRow);
                return rowIndexesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndexesRow FindByINDEX_CATALOGINDEX_SCHEMAINDEX_NAME(string INDEX_CATALOG, string INDEX_SCHEMA, string INDEX_NAME) {
                return ((IndexesRow)(this.Rows.Find(new object[] {
                            INDEX_CATALOG,
                            INDEX_SCHEMA,
                            INDEX_NAME})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                IndexesDataTable cln = ((IndexesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IndexesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnTABLE_CATALOG = base.Columns["TABLE_CATALOG"];
                this.columnTABLE_SCHEMA = base.Columns["TABLE_SCHEMA"];
                this.columnTABLE_NAME = base.Columns["TABLE_NAME"];
                this.columnINDEX_CATALOG = base.Columns["INDEX_CATALOG"];
                this.columnINDEX_SCHEMA = base.Columns["INDEX_SCHEMA"];
                this.columnINDEX_NAME = base.Columns["INDEX_NAME"];
                this.columnPRIMARY_KEY = base.Columns["PRIMARY_KEY"];
                this.columnUNIQUE = base.Columns["UNIQUE"];
                this.columnCLUSTERED = base.Columns["CLUSTERED"];
                this.columnTYPE = base.Columns["TYPE"];
                this.columnFILL_FACTOR = base.Columns["FILL_FACTOR"];
                this.columnINITIAL_SIZE = base.Columns["INITIAL_SIZE"];
                this.columnNULLS = base.Columns["NULLS"];
                this.columnSORT_BOOKMARKS = base.Columns["SORT_BOOKMARKS"];
                this.columnAUTO_UPDATE = base.Columns["AUTO_UPDATE"];
                this.columnNULL_COLLATION = base.Columns["NULL_COLLATION"];
                this.columnORDINAL_POSITION = base.Columns["ORDINAL_POSITION"];
                this.columnCOLUMN_NAME = base.Columns["COLUMN_NAME"];
                this.columnCOLUMN_GUID = base.Columns["COLUMN_GUID"];
                this.columnCOLUMN_PROPID = base.Columns["COLUMN_PROPID"];
                this.columnCOLLATION = base.Columns["COLLATION"];
                this.columnCARDINALITY = base.Columns["CARDINALITY"];
                this.columnPAGES = base.Columns["PAGES"];
                this.columnFILTER_CONDITION = base.Columns["FILTER_CONDITION"];
                this.columnINTEGRATED = base.Columns["INTEGRATED"];
                this.columnINDEX_DEFINITION = base.Columns["INDEX_DEFINITION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnTABLE_CATALOG = new global::System.Data.DataColumn("TABLE_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_CATALOG);
                this.columnTABLE_SCHEMA = new global::System.Data.DataColumn("TABLE_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_SCHEMA);
                this.columnTABLE_NAME = new global::System.Data.DataColumn("TABLE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_NAME);
                this.columnINDEX_CATALOG = new global::System.Data.DataColumn("INDEX_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINDEX_CATALOG);
                this.columnINDEX_SCHEMA = new global::System.Data.DataColumn("INDEX_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINDEX_SCHEMA);
                this.columnINDEX_NAME = new global::System.Data.DataColumn("INDEX_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINDEX_NAME);
                this.columnPRIMARY_KEY = new global::System.Data.DataColumn("PRIMARY_KEY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRIMARY_KEY);
                this.columnUNIQUE = new global::System.Data.DataColumn("UNIQUE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIQUE);
                this.columnCLUSTERED = new global::System.Data.DataColumn("CLUSTERED", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLUSTERED);
                this.columnTYPE = new global::System.Data.DataColumn("TYPE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE);
                this.columnFILL_FACTOR = new global::System.Data.DataColumn("FILL_FACTOR", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFILL_FACTOR);
                this.columnINITIAL_SIZE = new global::System.Data.DataColumn("INITIAL_SIZE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINITIAL_SIZE);
                this.columnNULLS = new global::System.Data.DataColumn("NULLS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNULLS);
                this.columnSORT_BOOKMARKS = new global::System.Data.DataColumn("SORT_BOOKMARKS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSORT_BOOKMARKS);
                this.columnAUTO_UPDATE = new global::System.Data.DataColumn("AUTO_UPDATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTO_UPDATE);
                this.columnNULL_COLLATION = new global::System.Data.DataColumn("NULL_COLLATION", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNULL_COLLATION);
                this.columnORDINAL_POSITION = new global::System.Data.DataColumn("ORDINAL_POSITION", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDINAL_POSITION);
                this.columnCOLUMN_NAME = new global::System.Data.DataColumn("COLUMN_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLUMN_NAME);
                this.columnCOLUMN_GUID = new global::System.Data.DataColumn("COLUMN_GUID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLUMN_GUID);
                this.columnCOLUMN_PROPID = new global::System.Data.DataColumn("COLUMN_PROPID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLUMN_PROPID);
                this.columnCOLLATION = new global::System.Data.DataColumn("COLLATION", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLLATION);
                this.columnCARDINALITY = new global::System.Data.DataColumn("CARDINALITY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCARDINALITY);
                this.columnPAGES = new global::System.Data.DataColumn("PAGES", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAGES);
                this.columnFILTER_CONDITION = new global::System.Data.DataColumn("FILTER_CONDITION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFILTER_CONDITION);
                this.columnINTEGRATED = new global::System.Data.DataColumn("INTEGRATED", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTEGRATED);
                this.columnINDEX_DEFINITION = new global::System.Data.DataColumn("INDEX_DEFINITION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINDEX_DEFINITION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnINDEX_CATALOG,
                                this.columnINDEX_SCHEMA,
                                this.columnINDEX_NAME}, true));
                this.columnINDEX_CATALOG.AllowDBNull = false;
                this.columnINDEX_SCHEMA.AllowDBNull = false;
                this.columnINDEX_NAME.AllowDBNull = false;
                this.Locale = new global::System.Globalization.CultureInfo("");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndexesRow NewIndexesRow() {
                return ((IndexesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IndexesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(IndexesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IndexesRowChanged != null)) {
                    this.IndexesRowChanged(this, new IndexesRowChangeEvent(((IndexesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IndexesRowChanging != null)) {
                    this.IndexesRowChanging(this, new IndexesRowChangeEvent(((IndexesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IndexesRowDeleted != null)) {
                    this.IndexesRowDeleted(this, new IndexesRowChangeEvent(((IndexesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IndexesRowDeleting != null)) {
                    this.IndexesRowDeleting(this, new IndexesRowChangeEvent(((IndexesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveIndexesRow(IndexesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SQLiteDbModel ds = new SQLiteDbModel();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IndexesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IndexColumnsDataTable : global::System.Data.TypedTableBase<IndexColumnsRow> {
            
            private global::System.Data.DataColumn columnCONSTRAINT_CATALOG;
            
            private global::System.Data.DataColumn columnCONSTRAINT_SCHEMA;
            
            private global::System.Data.DataColumn columnCONSTRAINT_NAME;
            
            private global::System.Data.DataColumn columnTABLE_CATALOG;
            
            private global::System.Data.DataColumn columnTABLE_SCHEMA;
            
            private global::System.Data.DataColumn columnTABLE_NAME;
            
            private global::System.Data.DataColumn columnCOLUMN_NAME;
            
            private global::System.Data.DataColumn columnORDINAL_POSITION;
            
            private global::System.Data.DataColumn columnINDEX_NAME;
            
            private global::System.Data.DataColumn columnCOLLATION_NAME;
            
            private global::System.Data.DataColumn columnSORT_MODE;
            
            private global::System.Data.DataColumn columnCONFLICT_OPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndexColumnsDataTable() {
                this.TableName = "IndexColumns";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal IndexColumnsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected IndexColumnsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CONSTRAINT_CATALOGColumn {
                get {
                    return this.columnCONSTRAINT_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CONSTRAINT_SCHEMAColumn {
                get {
                    return this.columnCONSTRAINT_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CONSTRAINT_NAMEColumn {
                get {
                    return this.columnCONSTRAINT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_CATALOGColumn {
                get {
                    return this.columnTABLE_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_SCHEMAColumn {
                get {
                    return this.columnTABLE_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_NAMEColumn {
                get {
                    return this.columnTABLE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLUMN_NAMEColumn {
                get {
                    return this.columnCOLUMN_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ORDINAL_POSITIONColumn {
                get {
                    return this.columnORDINAL_POSITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INDEX_NAMEColumn {
                get {
                    return this.columnINDEX_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLLATION_NAMEColumn {
                get {
                    return this.columnCOLLATION_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SORT_MODEColumn {
                get {
                    return this.columnSORT_MODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CONFLICT_OPTIONColumn {
                get {
                    return this.columnCONFLICT_OPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndexColumnsRow this[int index] {
                get {
                    return ((IndexColumnsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event IndexColumnsRowChangeEventHandler IndexColumnsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event IndexColumnsRowChangeEventHandler IndexColumnsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event IndexColumnsRowChangeEventHandler IndexColumnsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event IndexColumnsRowChangeEventHandler IndexColumnsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddIndexColumnsRow(IndexColumnsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndexColumnsRow AddIndexColumnsRow(string CONSTRAINT_CATALOG, string CONSTRAINT_SCHEMA, string CONSTRAINT_NAME, string TABLE_CATALOG, string TABLE_SCHEMA, string TABLE_NAME, string COLUMN_NAME, int ORDINAL_POSITION, string INDEX_NAME, string COLLATION_NAME, string SORT_MODE, int CONFLICT_OPTION) {
                IndexColumnsRow rowIndexColumnsRow = ((IndexColumnsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CONSTRAINT_CATALOG,
                        CONSTRAINT_SCHEMA,
                        CONSTRAINT_NAME,
                        TABLE_CATALOG,
                        TABLE_SCHEMA,
                        TABLE_NAME,
                        COLUMN_NAME,
                        ORDINAL_POSITION,
                        INDEX_NAME,
                        COLLATION_NAME,
                        SORT_MODE,
                        CONFLICT_OPTION};
                rowIndexColumnsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIndexColumnsRow);
                return rowIndexColumnsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndexColumnsRow FindByCONSTRAINT_CATALOGCONSTRAINT_SCHEMACOLUMN_NAMEINDEX_NAME(string CONSTRAINT_CATALOG, string CONSTRAINT_SCHEMA, string COLUMN_NAME, string INDEX_NAME) {
                return ((IndexColumnsRow)(this.Rows.Find(new object[] {
                            CONSTRAINT_CATALOG,
                            CONSTRAINT_SCHEMA,
                            COLUMN_NAME,
                            INDEX_NAME})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                IndexColumnsDataTable cln = ((IndexColumnsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IndexColumnsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCONSTRAINT_CATALOG = base.Columns["CONSTRAINT_CATALOG"];
                this.columnCONSTRAINT_SCHEMA = base.Columns["CONSTRAINT_SCHEMA"];
                this.columnCONSTRAINT_NAME = base.Columns["CONSTRAINT_NAME"];
                this.columnTABLE_CATALOG = base.Columns["TABLE_CATALOG"];
                this.columnTABLE_SCHEMA = base.Columns["TABLE_SCHEMA"];
                this.columnTABLE_NAME = base.Columns["TABLE_NAME"];
                this.columnCOLUMN_NAME = base.Columns["COLUMN_NAME"];
                this.columnORDINAL_POSITION = base.Columns["ORDINAL_POSITION"];
                this.columnINDEX_NAME = base.Columns["INDEX_NAME"];
                this.columnCOLLATION_NAME = base.Columns["COLLATION_NAME"];
                this.columnSORT_MODE = base.Columns["SORT_MODE"];
                this.columnCONFLICT_OPTION = base.Columns["CONFLICT_OPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCONSTRAINT_CATALOG = new global::System.Data.DataColumn("CONSTRAINT_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONSTRAINT_CATALOG);
                this.columnCONSTRAINT_SCHEMA = new global::System.Data.DataColumn("CONSTRAINT_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONSTRAINT_SCHEMA);
                this.columnCONSTRAINT_NAME = new global::System.Data.DataColumn("CONSTRAINT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONSTRAINT_NAME);
                this.columnTABLE_CATALOG = new global::System.Data.DataColumn("TABLE_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_CATALOG);
                this.columnTABLE_SCHEMA = new global::System.Data.DataColumn("TABLE_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_SCHEMA);
                this.columnTABLE_NAME = new global::System.Data.DataColumn("TABLE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_NAME);
                this.columnCOLUMN_NAME = new global::System.Data.DataColumn("COLUMN_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLUMN_NAME);
                this.columnORDINAL_POSITION = new global::System.Data.DataColumn("ORDINAL_POSITION", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDINAL_POSITION);
                this.columnINDEX_NAME = new global::System.Data.DataColumn("INDEX_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINDEX_NAME);
                this.columnCOLLATION_NAME = new global::System.Data.DataColumn("COLLATION_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLLATION_NAME);
                this.columnSORT_MODE = new global::System.Data.DataColumn("SORT_MODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSORT_MODE);
                this.columnCONFLICT_OPTION = new global::System.Data.DataColumn("CONFLICT_OPTION", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONFLICT_OPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCONSTRAINT_CATALOG,
                                this.columnCONSTRAINT_SCHEMA,
                                this.columnCOLUMN_NAME,
                                this.columnINDEX_NAME}, true));
                this.columnCONSTRAINT_CATALOG.AllowDBNull = false;
                this.columnCONSTRAINT_SCHEMA.AllowDBNull = false;
                this.columnCONSTRAINT_NAME.AllowDBNull = false;
                this.columnCOLUMN_NAME.AllowDBNull = false;
                this.columnORDINAL_POSITION.AllowDBNull = false;
                this.columnINDEX_NAME.AllowDBNull = false;
                this.Locale = new global::System.Globalization.CultureInfo("");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndexColumnsRow NewIndexColumnsRow() {
                return ((IndexColumnsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IndexColumnsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(IndexColumnsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IndexColumnsRowChanged != null)) {
                    this.IndexColumnsRowChanged(this, new IndexColumnsRowChangeEvent(((IndexColumnsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IndexColumnsRowChanging != null)) {
                    this.IndexColumnsRowChanging(this, new IndexColumnsRowChangeEvent(((IndexColumnsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IndexColumnsRowDeleted != null)) {
                    this.IndexColumnsRowDeleted(this, new IndexColumnsRowChangeEvent(((IndexColumnsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IndexColumnsRowDeleting != null)) {
                    this.IndexColumnsRowDeleting(this, new IndexColumnsRowChangeEvent(((IndexColumnsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveIndexColumnsRow(IndexColumnsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SQLiteDbModel ds = new SQLiteDbModel();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IndexColumnsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ViewsDataTable : global::System.Data.TypedTableBase<ViewsRow> {
            
            private global::System.Data.DataColumn columnTABLE_CATALOG;
            
            private global::System.Data.DataColumn columnTABLE_SCHEMA;
            
            private global::System.Data.DataColumn columnTABLE_NAME;
            
            private global::System.Data.DataColumn columnVIEW_DEFINITION;
            
            private global::System.Data.DataColumn columnCHECK_OPTION;
            
            private global::System.Data.DataColumn columnIS_UPDATABLE;
            
            private global::System.Data.DataColumn columnDESCRIPTION;
            
            private global::System.Data.DataColumn columnDATE_CREATED;
            
            private global::System.Data.DataColumn columnDATE_MODIFIED;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewsDataTable() {
                this.TableName = "Views";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ViewsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ViewsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_CATALOGColumn {
                get {
                    return this.columnTABLE_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_SCHEMAColumn {
                get {
                    return this.columnTABLE_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_NAMEColumn {
                get {
                    return this.columnTABLE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VIEW_DEFINITIONColumn {
                get {
                    return this.columnVIEW_DEFINITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHECK_OPTIONColumn {
                get {
                    return this.columnCHECK_OPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IS_UPDATABLEColumn {
                get {
                    return this.columnIS_UPDATABLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DESCRIPTIONColumn {
                get {
                    return this.columnDESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DATE_CREATEDColumn {
                get {
                    return this.columnDATE_CREATED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DATE_MODIFIEDColumn {
                get {
                    return this.columnDATE_MODIFIED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewsRow this[int index] {
                get {
                    return ((ViewsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ViewsRowChangeEventHandler ViewsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ViewsRowChangeEventHandler ViewsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ViewsRowChangeEventHandler ViewsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ViewsRowChangeEventHandler ViewsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddViewsRow(ViewsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewsRow AddViewsRow(CatalogsRow parentCatalogsRowByCatalogs_Views, string TABLE_SCHEMA, string TABLE_NAME, string VIEW_DEFINITION, bool CHECK_OPTION, bool IS_UPDATABLE, string DESCRIPTION, System.DateTime DATE_CREATED, System.DateTime DATE_MODIFIED) {
                ViewsRow rowViewsRow = ((ViewsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TABLE_SCHEMA,
                        TABLE_NAME,
                        VIEW_DEFINITION,
                        CHECK_OPTION,
                        IS_UPDATABLE,
                        DESCRIPTION,
                        DATE_CREATED,
                        DATE_MODIFIED};
                if ((parentCatalogsRowByCatalogs_Views != null)) {
                    columnValuesArray[0] = parentCatalogsRowByCatalogs_Views[0];
                }
                rowViewsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowViewsRow);
                return rowViewsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewsRow FindByTABLE_CATALOGTABLE_NAMETABLE_SCHEMA(string TABLE_CATALOG, string TABLE_NAME, string TABLE_SCHEMA) {
                return ((ViewsRow)(this.Rows.Find(new object[] {
                            TABLE_CATALOG,
                            TABLE_NAME,
                            TABLE_SCHEMA})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ViewsDataTable cln = ((ViewsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ViewsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnTABLE_CATALOG = base.Columns["TABLE_CATALOG"];
                this.columnTABLE_SCHEMA = base.Columns["TABLE_SCHEMA"];
                this.columnTABLE_NAME = base.Columns["TABLE_NAME"];
                this.columnVIEW_DEFINITION = base.Columns["VIEW_DEFINITION"];
                this.columnCHECK_OPTION = base.Columns["CHECK_OPTION"];
                this.columnIS_UPDATABLE = base.Columns["IS_UPDATABLE"];
                this.columnDESCRIPTION = base.Columns["DESCRIPTION"];
                this.columnDATE_CREATED = base.Columns["DATE_CREATED"];
                this.columnDATE_MODIFIED = base.Columns["DATE_MODIFIED"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnTABLE_CATALOG = new global::System.Data.DataColumn("TABLE_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_CATALOG);
                this.columnTABLE_SCHEMA = new global::System.Data.DataColumn("TABLE_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_SCHEMA);
                this.columnTABLE_NAME = new global::System.Data.DataColumn("TABLE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_NAME);
                this.columnVIEW_DEFINITION = new global::System.Data.DataColumn("VIEW_DEFINITION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIEW_DEFINITION);
                this.columnCHECK_OPTION = new global::System.Data.DataColumn("CHECK_OPTION", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHECK_OPTION);
                this.columnIS_UPDATABLE = new global::System.Data.DataColumn("IS_UPDATABLE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_UPDATABLE);
                this.columnDESCRIPTION = new global::System.Data.DataColumn("DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION);
                this.columnDATE_CREATED = new global::System.Data.DataColumn("DATE_CREATED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_CREATED);
                this.columnDATE_MODIFIED = new global::System.Data.DataColumn("DATE_MODIFIED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_MODIFIED);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTABLE_CATALOG,
                                this.columnTABLE_NAME,
                                this.columnTABLE_SCHEMA}, true));
                this.columnTABLE_CATALOG.AllowDBNull = false;
                this.columnTABLE_SCHEMA.AllowDBNull = false;
                this.columnTABLE_NAME.AllowDBNull = false;
                this.Locale = new global::System.Globalization.CultureInfo("");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewsRow NewViewsRow() {
                return ((ViewsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ViewsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ViewsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ViewsRowChanged != null)) {
                    this.ViewsRowChanged(this, new ViewsRowChangeEvent(((ViewsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ViewsRowChanging != null)) {
                    this.ViewsRowChanging(this, new ViewsRowChangeEvent(((ViewsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ViewsRowDeleted != null)) {
                    this.ViewsRowDeleted(this, new ViewsRowChangeEvent(((ViewsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ViewsRowDeleting != null)) {
                    this.ViewsRowDeleting(this, new ViewsRowChangeEvent(((ViewsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveViewsRow(ViewsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SQLiteDbModel ds = new SQLiteDbModel();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ViewsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ViewColumnsDataTable : global::System.Data.TypedTableBase<ViewColumnsRow> {
            
            private global::System.Data.DataColumn columnVIEW_CATALOG;
            
            private global::System.Data.DataColumn columnVIEW_SCHEMA;
            
            private global::System.Data.DataColumn columnVIEW_NAME;
            
            private global::System.Data.DataColumn columnVIEW_COLUMN_NAME;
            
            private global::System.Data.DataColumn columnTABLE_CATALOG;
            
            private global::System.Data.DataColumn columnTABLE_SCHEMA;
            
            private global::System.Data.DataColumn columnTABLE_NAME;
            
            private global::System.Data.DataColumn columnCOLUMN_NAME;
            
            private global::System.Data.DataColumn columnORDINAL_POSITION;
            
            private global::System.Data.DataColumn columnCOLUMN_HASDEFAULT;
            
            private global::System.Data.DataColumn columnCOLUMN_DEFAULT;
            
            private global::System.Data.DataColumn columnCOLUMN_FLAGS;
            
            private global::System.Data.DataColumn columnIS_NULLABLE;
            
            private global::System.Data.DataColumn columnDATA_TYPE;
            
            private global::System.Data.DataColumn columnCHARACTER_MAXIMUM_LENGTH;
            
            private global::System.Data.DataColumn columnNUMERIC_PRECISION;
            
            private global::System.Data.DataColumn columnNUMERIC_SCALE;
            
            private global::System.Data.DataColumn columnDATETIME_PRECISION;
            
            private global::System.Data.DataColumn columnCHARACTER_SET_CATALOG;
            
            private global::System.Data.DataColumn columnCHARACTER_SET_SCHEMA;
            
            private global::System.Data.DataColumn columnCHARACTER_SET_NAME;
            
            private global::System.Data.DataColumn columnCOLLATION_CATALOG;
            
            private global::System.Data.DataColumn columnCOLLATION_SCHEMA;
            
            private global::System.Data.DataColumn columnCOLLATION_NAME;
            
            private global::System.Data.DataColumn columnPRIMARY_KEY;
            
            private global::System.Data.DataColumn columnEDM_TYPE;
            
            private global::System.Data.DataColumn columnAUTOINCREMENT;
            
            private global::System.Data.DataColumn columnUNIQUE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewColumnsDataTable() {
                this.TableName = "ViewColumns";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ViewColumnsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ViewColumnsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VIEW_CATALOGColumn {
                get {
                    return this.columnVIEW_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VIEW_SCHEMAColumn {
                get {
                    return this.columnVIEW_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VIEW_NAMEColumn {
                get {
                    return this.columnVIEW_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VIEW_COLUMN_NAMEColumn {
                get {
                    return this.columnVIEW_COLUMN_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_CATALOGColumn {
                get {
                    return this.columnTABLE_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_SCHEMAColumn {
                get {
                    return this.columnTABLE_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_NAMEColumn {
                get {
                    return this.columnTABLE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLUMN_NAMEColumn {
                get {
                    return this.columnCOLUMN_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ORDINAL_POSITIONColumn {
                get {
                    return this.columnORDINAL_POSITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLUMN_HASDEFAULTColumn {
                get {
                    return this.columnCOLUMN_HASDEFAULT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLUMN_DEFAULTColumn {
                get {
                    return this.columnCOLUMN_DEFAULT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLUMN_FLAGSColumn {
                get {
                    return this.columnCOLUMN_FLAGS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IS_NULLABLEColumn {
                get {
                    return this.columnIS_NULLABLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DATA_TYPEColumn {
                get {
                    return this.columnDATA_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHARACTER_MAXIMUM_LENGTHColumn {
                get {
                    return this.columnCHARACTER_MAXIMUM_LENGTH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUMERIC_PRECISIONColumn {
                get {
                    return this.columnNUMERIC_PRECISION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUMERIC_SCALEColumn {
                get {
                    return this.columnNUMERIC_SCALE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DATETIME_PRECISIONColumn {
                get {
                    return this.columnDATETIME_PRECISION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHARACTER_SET_CATALOGColumn {
                get {
                    return this.columnCHARACTER_SET_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHARACTER_SET_SCHEMAColumn {
                get {
                    return this.columnCHARACTER_SET_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHARACTER_SET_NAMEColumn {
                get {
                    return this.columnCHARACTER_SET_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLLATION_CATALOGColumn {
                get {
                    return this.columnCOLLATION_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLLATION_SCHEMAColumn {
                get {
                    return this.columnCOLLATION_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLLATION_NAMEColumn {
                get {
                    return this.columnCOLLATION_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PRIMARY_KEYColumn {
                get {
                    return this.columnPRIMARY_KEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EDM_TYPEColumn {
                get {
                    return this.columnEDM_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AUTOINCREMENTColumn {
                get {
                    return this.columnAUTOINCREMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UNIQUEColumn {
                get {
                    return this.columnUNIQUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewColumnsRow this[int index] {
                get {
                    return ((ViewColumnsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ViewColumnsRowChangeEventHandler ViewColumnsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ViewColumnsRowChangeEventHandler ViewColumnsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ViewColumnsRowChangeEventHandler ViewColumnsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ViewColumnsRowChangeEventHandler ViewColumnsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddViewColumnsRow(ViewColumnsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewColumnsRow AddViewColumnsRow(
                        string VIEW_CATALOG, 
                        string VIEW_SCHEMA, 
                        string VIEW_NAME, 
                        string VIEW_COLUMN_NAME, 
                        string TABLE_CATALOG, 
                        string TABLE_SCHEMA, 
                        string TABLE_NAME, 
                        string COLUMN_NAME, 
                        int ORDINAL_POSITION, 
                        bool COLUMN_HASDEFAULT, 
                        string COLUMN_DEFAULT, 
                        long COLUMN_FLAGS, 
                        bool IS_NULLABLE, 
                        string DATA_TYPE, 
                        int CHARACTER_MAXIMUM_LENGTH, 
                        int NUMERIC_PRECISION, 
                        int NUMERIC_SCALE, 
                        long DATETIME_PRECISION, 
                        string CHARACTER_SET_CATALOG, 
                        string CHARACTER_SET_SCHEMA, 
                        string CHARACTER_SET_NAME, 
                        string COLLATION_CATALOG, 
                        string COLLATION_SCHEMA, 
                        string COLLATION_NAME, 
                        bool PRIMARY_KEY, 
                        string EDM_TYPE, 
                        bool AUTOINCREMENT, 
                        bool UNIQUE) {
                ViewColumnsRow rowViewColumnsRow = ((ViewColumnsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VIEW_CATALOG,
                        VIEW_SCHEMA,
                        VIEW_NAME,
                        VIEW_COLUMN_NAME,
                        TABLE_CATALOG,
                        TABLE_SCHEMA,
                        TABLE_NAME,
                        COLUMN_NAME,
                        ORDINAL_POSITION,
                        COLUMN_HASDEFAULT,
                        COLUMN_DEFAULT,
                        COLUMN_FLAGS,
                        IS_NULLABLE,
                        DATA_TYPE,
                        CHARACTER_MAXIMUM_LENGTH,
                        NUMERIC_PRECISION,
                        NUMERIC_SCALE,
                        DATETIME_PRECISION,
                        CHARACTER_SET_CATALOG,
                        CHARACTER_SET_SCHEMA,
                        CHARACTER_SET_NAME,
                        COLLATION_CATALOG,
                        COLLATION_SCHEMA,
                        COLLATION_NAME,
                        PRIMARY_KEY,
                        EDM_TYPE,
                        AUTOINCREMENT,
                        UNIQUE};
                rowViewColumnsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowViewColumnsRow);
                return rowViewColumnsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewColumnsRow FindByVIEW_CATALOGVIEW_COLUMN_NAMEVIEW_NAMEVIEW_SCHEMA(string VIEW_CATALOG, string VIEW_COLUMN_NAME, string VIEW_NAME, string VIEW_SCHEMA) {
                return ((ViewColumnsRow)(this.Rows.Find(new object[] {
                            VIEW_CATALOG,
                            VIEW_COLUMN_NAME,
                            VIEW_NAME,
                            VIEW_SCHEMA})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ViewColumnsDataTable cln = ((ViewColumnsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ViewColumnsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnVIEW_CATALOG = base.Columns["VIEW_CATALOG"];
                this.columnVIEW_SCHEMA = base.Columns["VIEW_SCHEMA"];
                this.columnVIEW_NAME = base.Columns["VIEW_NAME"];
                this.columnVIEW_COLUMN_NAME = base.Columns["VIEW_COLUMN_NAME"];
                this.columnTABLE_CATALOG = base.Columns["TABLE_CATALOG"];
                this.columnTABLE_SCHEMA = base.Columns["TABLE_SCHEMA"];
                this.columnTABLE_NAME = base.Columns["TABLE_NAME"];
                this.columnCOLUMN_NAME = base.Columns["COLUMN_NAME"];
                this.columnORDINAL_POSITION = base.Columns["ORDINAL_POSITION"];
                this.columnCOLUMN_HASDEFAULT = base.Columns["COLUMN_HASDEFAULT"];
                this.columnCOLUMN_DEFAULT = base.Columns["COLUMN_DEFAULT"];
                this.columnCOLUMN_FLAGS = base.Columns["COLUMN_FLAGS"];
                this.columnIS_NULLABLE = base.Columns["IS_NULLABLE"];
                this.columnDATA_TYPE = base.Columns["DATA_TYPE"];
                this.columnCHARACTER_MAXIMUM_LENGTH = base.Columns["CHARACTER_MAXIMUM_LENGTH"];
                this.columnNUMERIC_PRECISION = base.Columns["NUMERIC_PRECISION"];
                this.columnNUMERIC_SCALE = base.Columns["NUMERIC_SCALE"];
                this.columnDATETIME_PRECISION = base.Columns["DATETIME_PRECISION"];
                this.columnCHARACTER_SET_CATALOG = base.Columns["CHARACTER_SET_CATALOG"];
                this.columnCHARACTER_SET_SCHEMA = base.Columns["CHARACTER_SET_SCHEMA"];
                this.columnCHARACTER_SET_NAME = base.Columns["CHARACTER_SET_NAME"];
                this.columnCOLLATION_CATALOG = base.Columns["COLLATION_CATALOG"];
                this.columnCOLLATION_SCHEMA = base.Columns["COLLATION_SCHEMA"];
                this.columnCOLLATION_NAME = base.Columns["COLLATION_NAME"];
                this.columnPRIMARY_KEY = base.Columns["PRIMARY_KEY"];
                this.columnEDM_TYPE = base.Columns["EDM_TYPE"];
                this.columnAUTOINCREMENT = base.Columns["AUTOINCREMENT"];
                this.columnUNIQUE = base.Columns["UNIQUE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnVIEW_CATALOG = new global::System.Data.DataColumn("VIEW_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIEW_CATALOG);
                this.columnVIEW_SCHEMA = new global::System.Data.DataColumn("VIEW_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIEW_SCHEMA);
                this.columnVIEW_NAME = new global::System.Data.DataColumn("VIEW_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIEW_NAME);
                this.columnVIEW_COLUMN_NAME = new global::System.Data.DataColumn("VIEW_COLUMN_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIEW_COLUMN_NAME);
                this.columnTABLE_CATALOG = new global::System.Data.DataColumn("TABLE_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_CATALOG);
                this.columnTABLE_SCHEMA = new global::System.Data.DataColumn("TABLE_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_SCHEMA);
                this.columnTABLE_NAME = new global::System.Data.DataColumn("TABLE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_NAME);
                this.columnCOLUMN_NAME = new global::System.Data.DataColumn("COLUMN_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLUMN_NAME);
                this.columnORDINAL_POSITION = new global::System.Data.DataColumn("ORDINAL_POSITION", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDINAL_POSITION);
                this.columnCOLUMN_HASDEFAULT = new global::System.Data.DataColumn("COLUMN_HASDEFAULT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLUMN_HASDEFAULT);
                this.columnCOLUMN_DEFAULT = new global::System.Data.DataColumn("COLUMN_DEFAULT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLUMN_DEFAULT);
                this.columnCOLUMN_FLAGS = new global::System.Data.DataColumn("COLUMN_FLAGS", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLUMN_FLAGS);
                this.columnIS_NULLABLE = new global::System.Data.DataColumn("IS_NULLABLE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_NULLABLE);
                this.columnDATA_TYPE = new global::System.Data.DataColumn("DATA_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA_TYPE);
                this.columnCHARACTER_MAXIMUM_LENGTH = new global::System.Data.DataColumn("CHARACTER_MAXIMUM_LENGTH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHARACTER_MAXIMUM_LENGTH);
                this.columnNUMERIC_PRECISION = new global::System.Data.DataColumn("NUMERIC_PRECISION", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMERIC_PRECISION);
                this.columnNUMERIC_SCALE = new global::System.Data.DataColumn("NUMERIC_SCALE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMERIC_SCALE);
                this.columnDATETIME_PRECISION = new global::System.Data.DataColumn("DATETIME_PRECISION", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATETIME_PRECISION);
                this.columnCHARACTER_SET_CATALOG = new global::System.Data.DataColumn("CHARACTER_SET_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHARACTER_SET_CATALOG);
                this.columnCHARACTER_SET_SCHEMA = new global::System.Data.DataColumn("CHARACTER_SET_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHARACTER_SET_SCHEMA);
                this.columnCHARACTER_SET_NAME = new global::System.Data.DataColumn("CHARACTER_SET_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHARACTER_SET_NAME);
                this.columnCOLLATION_CATALOG = new global::System.Data.DataColumn("COLLATION_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLLATION_CATALOG);
                this.columnCOLLATION_SCHEMA = new global::System.Data.DataColumn("COLLATION_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLLATION_SCHEMA);
                this.columnCOLLATION_NAME = new global::System.Data.DataColumn("COLLATION_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLLATION_NAME);
                this.columnPRIMARY_KEY = new global::System.Data.DataColumn("PRIMARY_KEY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRIMARY_KEY);
                this.columnEDM_TYPE = new global::System.Data.DataColumn("EDM_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDM_TYPE);
                this.columnAUTOINCREMENT = new global::System.Data.DataColumn("AUTOINCREMENT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTOINCREMENT);
                this.columnUNIQUE = new global::System.Data.DataColumn("UNIQUE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIQUE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnVIEW_CATALOG,
                                this.columnVIEW_COLUMN_NAME,
                                this.columnVIEW_NAME,
                                this.columnVIEW_SCHEMA}, true));
                this.columnVIEW_CATALOG.AllowDBNull = false;
                this.columnVIEW_SCHEMA.AllowDBNull = false;
                this.columnVIEW_NAME.AllowDBNull = false;
                this.columnVIEW_COLUMN_NAME.AllowDBNull = false;
                this.Locale = new global::System.Globalization.CultureInfo("");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewColumnsRow NewViewColumnsRow() {
                return ((ViewColumnsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ViewColumnsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ViewColumnsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ViewColumnsRowChanged != null)) {
                    this.ViewColumnsRowChanged(this, new ViewColumnsRowChangeEvent(((ViewColumnsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ViewColumnsRowChanging != null)) {
                    this.ViewColumnsRowChanging(this, new ViewColumnsRowChangeEvent(((ViewColumnsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ViewColumnsRowDeleted != null)) {
                    this.ViewColumnsRowDeleted(this, new ViewColumnsRowChangeEvent(((ViewColumnsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ViewColumnsRowDeleting != null)) {
                    this.ViewColumnsRowDeleting(this, new ViewColumnsRowChangeEvent(((ViewColumnsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveViewColumnsRow(ViewColumnsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SQLiteDbModel ds = new SQLiteDbModel();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ViewColumnsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ForeignKeysDataTable : global::System.Data.TypedTableBase<ForeignKeysRow> {
            
            private global::System.Data.DataColumn columnCONSTRAINT_CATALOG;
            
            private global::System.Data.DataColumn columnCONSTRAINT_SCHEMA;
            
            private global::System.Data.DataColumn columnCONSTRAINT_NAME;
            
            private global::System.Data.DataColumn columnTABLE_CATALOG;
            
            private global::System.Data.DataColumn columnTABLE_SCHEMA;
            
            private global::System.Data.DataColumn columnTABLE_NAME;
            
            private global::System.Data.DataColumn columnCONSTRAINT_TYPE;
            
            private global::System.Data.DataColumn columnIS_DEFERRABLE;
            
            private global::System.Data.DataColumn columnINITIALLY_DEFERRED;
            
            private global::System.Data.DataColumn columnFKEY_FROM_COLUMN;
            
            private global::System.Data.DataColumn columnFKEY_FROM_ORDINAL_POSITION;
            
            private global::System.Data.DataColumn columnFKEY_TO_CATALOG;
            
            private global::System.Data.DataColumn columnFKEY_TO_SCHEMA;
            
            private global::System.Data.DataColumn columnFKEY_TO_TABLE;
            
            private global::System.Data.DataColumn columnFKEY_TO_COLUMN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ForeignKeysDataTable() {
                this.TableName = "ForeignKeys";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ForeignKeysDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ForeignKeysDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CONSTRAINT_CATALOGColumn {
                get {
                    return this.columnCONSTRAINT_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CONSTRAINT_SCHEMAColumn {
                get {
                    return this.columnCONSTRAINT_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CONSTRAINT_NAMEColumn {
                get {
                    return this.columnCONSTRAINT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_CATALOGColumn {
                get {
                    return this.columnTABLE_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_SCHEMAColumn {
                get {
                    return this.columnTABLE_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_NAMEColumn {
                get {
                    return this.columnTABLE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CONSTRAINT_TYPEColumn {
                get {
                    return this.columnCONSTRAINT_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IS_DEFERRABLEColumn {
                get {
                    return this.columnIS_DEFERRABLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INITIALLY_DEFERREDColumn {
                get {
                    return this.columnINITIALLY_DEFERRED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FKEY_FROM_COLUMNColumn {
                get {
                    return this.columnFKEY_FROM_COLUMN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FKEY_FROM_ORDINAL_POSITIONColumn {
                get {
                    return this.columnFKEY_FROM_ORDINAL_POSITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FKEY_TO_CATALOGColumn {
                get {
                    return this.columnFKEY_TO_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FKEY_TO_SCHEMAColumn {
                get {
                    return this.columnFKEY_TO_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FKEY_TO_TABLEColumn {
                get {
                    return this.columnFKEY_TO_TABLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FKEY_TO_COLUMNColumn {
                get {
                    return this.columnFKEY_TO_COLUMN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ForeignKeysRow this[int index] {
                get {
                    return ((ForeignKeysRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ForeignKeysRowChangeEventHandler ForeignKeysRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ForeignKeysRowChangeEventHandler ForeignKeysRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ForeignKeysRowChangeEventHandler ForeignKeysRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ForeignKeysRowChangeEventHandler ForeignKeysRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddForeignKeysRow(ForeignKeysRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ForeignKeysRow AddForeignKeysRow(string CONSTRAINT_CATALOG, string CONSTRAINT_SCHEMA, string CONSTRAINT_NAME, string TABLE_CATALOG, string TABLE_SCHEMA, string TABLE_NAME, string CONSTRAINT_TYPE, bool IS_DEFERRABLE, bool INITIALLY_DEFERRED, string FKEY_FROM_COLUMN, int FKEY_FROM_ORDINAL_POSITION, string FKEY_TO_CATALOG, string FKEY_TO_SCHEMA, string FKEY_TO_TABLE, string FKEY_TO_COLUMN) {
                ForeignKeysRow rowForeignKeysRow = ((ForeignKeysRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CONSTRAINT_CATALOG,
                        CONSTRAINT_SCHEMA,
                        CONSTRAINT_NAME,
                        TABLE_CATALOG,
                        TABLE_SCHEMA,
                        TABLE_NAME,
                        CONSTRAINT_TYPE,
                        IS_DEFERRABLE,
                        INITIALLY_DEFERRED,
                        FKEY_FROM_COLUMN,
                        FKEY_FROM_ORDINAL_POSITION,
                        FKEY_TO_CATALOG,
                        FKEY_TO_SCHEMA,
                        FKEY_TO_TABLE,
                        FKEY_TO_COLUMN};
                rowForeignKeysRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowForeignKeysRow);
                return rowForeignKeysRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ForeignKeysDataTable cln = ((ForeignKeysDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ForeignKeysDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCONSTRAINT_CATALOG = base.Columns["CONSTRAINT_CATALOG"];
                this.columnCONSTRAINT_SCHEMA = base.Columns["CONSTRAINT_SCHEMA"];
                this.columnCONSTRAINT_NAME = base.Columns["CONSTRAINT_NAME"];
                this.columnTABLE_CATALOG = base.Columns["TABLE_CATALOG"];
                this.columnTABLE_SCHEMA = base.Columns["TABLE_SCHEMA"];
                this.columnTABLE_NAME = base.Columns["TABLE_NAME"];
                this.columnCONSTRAINT_TYPE = base.Columns["CONSTRAINT_TYPE"];
                this.columnIS_DEFERRABLE = base.Columns["IS_DEFERRABLE"];
                this.columnINITIALLY_DEFERRED = base.Columns["INITIALLY_DEFERRED"];
                this.columnFKEY_FROM_COLUMN = base.Columns["FKEY_FROM_COLUMN"];
                this.columnFKEY_FROM_ORDINAL_POSITION = base.Columns["FKEY_FROM_ORDINAL_POSITION"];
                this.columnFKEY_TO_CATALOG = base.Columns["FKEY_TO_CATALOG"];
                this.columnFKEY_TO_SCHEMA = base.Columns["FKEY_TO_SCHEMA"];
                this.columnFKEY_TO_TABLE = base.Columns["FKEY_TO_TABLE"];
                this.columnFKEY_TO_COLUMN = base.Columns["FKEY_TO_COLUMN"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCONSTRAINT_CATALOG = new global::System.Data.DataColumn("CONSTRAINT_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONSTRAINT_CATALOG);
                this.columnCONSTRAINT_SCHEMA = new global::System.Data.DataColumn("CONSTRAINT_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONSTRAINT_SCHEMA);
                this.columnCONSTRAINT_NAME = new global::System.Data.DataColumn("CONSTRAINT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONSTRAINT_NAME);
                this.columnTABLE_CATALOG = new global::System.Data.DataColumn("TABLE_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_CATALOG);
                this.columnTABLE_SCHEMA = new global::System.Data.DataColumn("TABLE_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_SCHEMA);
                this.columnTABLE_NAME = new global::System.Data.DataColumn("TABLE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_NAME);
                this.columnCONSTRAINT_TYPE = new global::System.Data.DataColumn("CONSTRAINT_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONSTRAINT_TYPE);
                this.columnIS_DEFERRABLE = new global::System.Data.DataColumn("IS_DEFERRABLE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_DEFERRABLE);
                this.columnINITIALLY_DEFERRED = new global::System.Data.DataColumn("INITIALLY_DEFERRED", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINITIALLY_DEFERRED);
                this.columnFKEY_FROM_COLUMN = new global::System.Data.DataColumn("FKEY_FROM_COLUMN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFKEY_FROM_COLUMN);
                this.columnFKEY_FROM_ORDINAL_POSITION = new global::System.Data.DataColumn("FKEY_FROM_ORDINAL_POSITION", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFKEY_FROM_ORDINAL_POSITION);
                this.columnFKEY_TO_CATALOG = new global::System.Data.DataColumn("FKEY_TO_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFKEY_TO_CATALOG);
                this.columnFKEY_TO_SCHEMA = new global::System.Data.DataColumn("FKEY_TO_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFKEY_TO_SCHEMA);
                this.columnFKEY_TO_TABLE = new global::System.Data.DataColumn("FKEY_TO_TABLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFKEY_TO_TABLE);
                this.columnFKEY_TO_COLUMN = new global::System.Data.DataColumn("FKEY_TO_COLUMN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFKEY_TO_COLUMN);
                this.Locale = new global::System.Globalization.CultureInfo("");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ForeignKeysRow NewForeignKeysRow() {
                return ((ForeignKeysRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ForeignKeysRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ForeignKeysRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ForeignKeysRowChanged != null)) {
                    this.ForeignKeysRowChanged(this, new ForeignKeysRowChangeEvent(((ForeignKeysRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ForeignKeysRowChanging != null)) {
                    this.ForeignKeysRowChanging(this, new ForeignKeysRowChangeEvent(((ForeignKeysRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ForeignKeysRowDeleted != null)) {
                    this.ForeignKeysRowDeleted(this, new ForeignKeysRowChangeEvent(((ForeignKeysRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ForeignKeysRowDeleting != null)) {
                    this.ForeignKeysRowDeleting(this, new ForeignKeysRowChangeEvent(((ForeignKeysRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveForeignKeysRow(ForeignKeysRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SQLiteDbModel ds = new SQLiteDbModel();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ForeignKeysDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TriggersDataTable : global::System.Data.TypedTableBase<TriggersRow> {
            
            private global::System.Data.DataColumn columnTABLE_CATALOG;
            
            private global::System.Data.DataColumn columnTABLE_SCHEMA;
            
            private global::System.Data.DataColumn columnTABLE_NAME;
            
            private global::System.Data.DataColumn columnTRIGGER_NAME;
            
            private global::System.Data.DataColumn columnTRIGGER_DEFINITION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TriggersDataTable() {
                this.TableName = "Triggers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TriggersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TriggersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_CATALOGColumn {
                get {
                    return this.columnTABLE_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_SCHEMAColumn {
                get {
                    return this.columnTABLE_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TABLE_NAMEColumn {
                get {
                    return this.columnTABLE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TRIGGER_NAMEColumn {
                get {
                    return this.columnTRIGGER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TRIGGER_DEFINITIONColumn {
                get {
                    return this.columnTRIGGER_DEFINITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TriggersRow this[int index] {
                get {
                    return ((TriggersRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TriggersRowChangeEventHandler TriggersRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TriggersRowChangeEventHandler TriggersRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TriggersRowChangeEventHandler TriggersRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TriggersRowChangeEventHandler TriggersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTriggersRow(TriggersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TriggersRow AddTriggersRow(string TABLE_CATALOG, string TABLE_SCHEMA, string TABLE_NAME, string TRIGGER_NAME, string TRIGGER_DEFINITION) {
                TriggersRow rowTriggersRow = ((TriggersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TABLE_CATALOG,
                        TABLE_SCHEMA,
                        TABLE_NAME,
                        TRIGGER_NAME,
                        TRIGGER_DEFINITION};
                rowTriggersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTriggersRow);
                return rowTriggersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TriggersDataTable cln = ((TriggersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TriggersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnTABLE_CATALOG = base.Columns["TABLE_CATALOG"];
                this.columnTABLE_SCHEMA = base.Columns["TABLE_SCHEMA"];
                this.columnTABLE_NAME = base.Columns["TABLE_NAME"];
                this.columnTRIGGER_NAME = base.Columns["TRIGGER_NAME"];
                this.columnTRIGGER_DEFINITION = base.Columns["TRIGGER_DEFINITION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnTABLE_CATALOG = new global::System.Data.DataColumn("TABLE_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_CATALOG);
                this.columnTABLE_SCHEMA = new global::System.Data.DataColumn("TABLE_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_SCHEMA);
                this.columnTABLE_NAME = new global::System.Data.DataColumn("TABLE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTABLE_NAME);
                this.columnTRIGGER_NAME = new global::System.Data.DataColumn("TRIGGER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRIGGER_NAME);
                this.columnTRIGGER_DEFINITION = new global::System.Data.DataColumn("TRIGGER_DEFINITION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRIGGER_DEFINITION);
                this.Locale = new global::System.Globalization.CultureInfo("");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TriggersRow NewTriggersRow() {
                return ((TriggersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TriggersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TriggersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TriggersRowChanged != null)) {
                    this.TriggersRowChanged(this, new TriggersRowChangeEvent(((TriggersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TriggersRowChanging != null)) {
                    this.TriggersRowChanging(this, new TriggersRowChangeEvent(((TriggersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TriggersRowDeleted != null)) {
                    this.TriggersRowDeleted(this, new TriggersRowChangeEvent(((TriggersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TriggersRowDeleting != null)) {
                    this.TriggersRowDeleting(this, new TriggersRowChangeEvent(((TriggersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTriggersRow(TriggersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SQLiteDbModel ds = new SQLiteDbModel();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TriggersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CatalogsRow : global::System.Data.DataRow {
            
            private CatalogsDataTable tableCatalogs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CatalogsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCatalogs = ((CatalogsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CATALOG_NAME {
                get {
                    return ((string)(this[this.tableCatalogs.CATALOG_NAMEColumn]));
                }
                set {
                    this[this.tableCatalogs.CATALOG_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableCatalogs.DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRIPTION\' in table \'Catalogs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCatalogs.DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ID {
                get {
                    try {
                        return ((long)(this[this.tableCatalogs.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'Catalogs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCatalogs.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDESCRIPTIONNull() {
                return this.IsNull(this.tableCatalogs.DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDESCRIPTIONNull() {
                this[this.tableCatalogs.DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIDNull() {
                return this.IsNull(this.tableCatalogs.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIDNull() {
                this[this.tableCatalogs.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TablesRow[] GetTablesRows() {
                if ((this.Table.ChildRelations["Catalogs_Tables"] == null)) {
                    return new TablesRow[0];
                }
                else {
                    return ((TablesRow[])(base.GetChildRows(this.Table.ChildRelations["Catalogs_Tables"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndexesRow[] GetIndexesRows() {
                if ((this.Table.ChildRelations["Catalogs_Indexes"] == null)) {
                    return new IndexesRow[0];
                }
                else {
                    return ((IndexesRow[])(base.GetChildRows(this.Table.ChildRelations["Catalogs_Indexes"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewsRow[] GetViewsRows() {
                if ((this.Table.ChildRelations["Catalogs_Views"] == null)) {
                    return new ViewsRow[0];
                }
                else {
                    return ((ViewsRow[])(base.GetChildRows(this.Table.ChildRelations["Catalogs_Views"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TablesRow : global::System.Data.DataRow {
            
            private TablesDataTable tableTables;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TablesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTables = ((TablesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_CATALOG {
                get {
                    return ((string)(this[this.tableTables.TABLE_CATALOGColumn]));
                }
                set {
                    this[this.tableTables.TABLE_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_SCHEMA {
                get {
                    return ((string)(this[this.tableTables.TABLE_SCHEMAColumn]));
                }
                set {
                    this[this.tableTables.TABLE_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_NAME {
                get {
                    return ((string)(this[this.tableTables.TABLE_NAMEColumn]));
                }
                set {
                    this[this.tableTables.TABLE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableTables.TABLE_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TABLE_TYPE\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTables.TABLE_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long TABLE_ID {
                get {
                    try {
                        return ((long)(this[this.tableTables.TABLE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TABLE_ID\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTables.TABLE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TABLE_ROOTPAGE {
                get {
                    try {
                        return ((int)(this[this.tableTables.TABLE_ROOTPAGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TABLE_ROOTPAGE\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTables.TABLE_ROOTPAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_DEFINITION {
                get {
                    try {
                        return ((string)(this[this.tableTables.TABLE_DEFINITIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TABLE_DEFINITION\' in table \'Tables\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTables.TABLE_DEFINITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CatalogsRow CatalogsRow {
                get {
                    return ((CatalogsRow)(this.GetParentRow(this.Table.ParentRelations["Catalogs_Tables"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Catalogs_Tables"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTABLE_TYPENull() {
                return this.IsNull(this.tableTables.TABLE_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTABLE_TYPENull() {
                this[this.tableTables.TABLE_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTABLE_IDNull() {
                return this.IsNull(this.tableTables.TABLE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTABLE_IDNull() {
                this[this.tableTables.TABLE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTABLE_ROOTPAGENull() {
                return this.IsNull(this.tableTables.TABLE_ROOTPAGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTABLE_ROOTPAGENull() {
                this[this.tableTables.TABLE_ROOTPAGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTABLE_DEFINITIONNull() {
                return this.IsNull(this.tableTables.TABLE_DEFINITIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTABLE_DEFINITIONNull() {
                this[this.tableTables.TABLE_DEFINITIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ColumnsRow[] GetColumnsRows() {
                if ((this.Table.ChildRelations["Tables_Columns"] == null)) {
                    return new ColumnsRow[0];
                }
                else {
                    return ((ColumnsRow[])(base.GetChildRows(this.Table.ChildRelations["Tables_Columns"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndexesRow[] GetIndexesRows() {
                if ((this.Table.ChildRelations["Tables_Indexes"] == null)) {
                    return new IndexesRow[0];
                }
                else {
                    return ((IndexesRow[])(base.GetChildRows(this.Table.ChildRelations["Tables_Indexes"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ColumnsRow : global::System.Data.DataRow {
            
            private ColumnsDataTable tableColumns;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ColumnsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableColumns = ((ColumnsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_CATALOG {
                get {
                    return ((string)(this[this.tableColumns.TABLE_CATALOGColumn]));
                }
                set {
                    this[this.tableColumns.TABLE_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_SCHEMA {
                get {
                    return ((string)(this[this.tableColumns.TABLE_SCHEMAColumn]));
                }
                set {
                    this[this.tableColumns.TABLE_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_NAME {
                get {
                    return ((string)(this[this.tableColumns.TABLE_NAMEColumn]));
                }
                set {
                    this[this.tableColumns.TABLE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COLUMN_NAME {
                get {
                    return ((string)(this[this.tableColumns.COLUMN_NAMEColumn]));
                }
                set {
                    this[this.tableColumns.COLUMN_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid COLUMN_GUID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableColumns.COLUMN_GUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLUMN_GUID\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.COLUMN_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long COLUMN_PROPID {
                get {
                    try {
                        return ((long)(this[this.tableColumns.COLUMN_PROPIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLUMN_PROPID\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.COLUMN_PROPIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ORDINAL_POSITION {
                get {
                    try {
                        return ((int)(this[this.tableColumns.ORDINAL_POSITIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORDINAL_POSITION\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.ORDINAL_POSITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool COLUMN_HASDEFAULT {
                get {
                    try {
                        return ((bool)(this[this.tableColumns.COLUMN_HASDEFAULTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLUMN_HASDEFAULT\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.COLUMN_HASDEFAULTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COLUMN_DEFAULT {
                get {
                    try {
                        return ((string)(this[this.tableColumns.COLUMN_DEFAULTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLUMN_DEFAULT\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.COLUMN_DEFAULTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long COLUMN_FLAGS {
                get {
                    try {
                        return ((long)(this[this.tableColumns.COLUMN_FLAGSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLUMN_FLAGS\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.COLUMN_FLAGSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IS_NULLABLE {
                get {
                    try {
                        return ((bool)(this[this.tableColumns.IS_NULLABLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_NULLABLE\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.IS_NULLABLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DATA_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableColumns.DATA_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATA_TYPE\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.DATA_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid TYPE_GUID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableColumns.TYPE_GUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYPE_GUID\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.TYPE_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CHARACTER_MAXIMUM_LENGTH {
                get {
                    try {
                        return ((int)(this[this.tableColumns.CHARACTER_MAXIMUM_LENGTHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHARACTER_MAXIMUM_LENGTH\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.CHARACTER_MAXIMUM_LENGTHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CHARACTER_OCTET_LENGTH {
                get {
                    try {
                        return ((int)(this[this.tableColumns.CHARACTER_OCTET_LENGTHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHARACTER_OCTET_LENGTH\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.CHARACTER_OCTET_LENGTHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NUMERIC_PRECISION {
                get {
                    try {
                        return ((int)(this[this.tableColumns.NUMERIC_PRECISIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUMERIC_PRECISION\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.NUMERIC_PRECISIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NUMERIC_SCALE {
                get {
                    try {
                        return ((int)(this[this.tableColumns.NUMERIC_SCALEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUMERIC_SCALE\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.NUMERIC_SCALEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DATETIME_PRECISION {
                get {
                    try {
                        return ((long)(this[this.tableColumns.DATETIME_PRECISIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATETIME_PRECISION\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.DATETIME_PRECISIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CHARACTER_SET_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableColumns.CHARACTER_SET_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHARACTER_SET_CATALOG\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.CHARACTER_SET_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CHARACTER_SET_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableColumns.CHARACTER_SET_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHARACTER_SET_SCHEMA\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.CHARACTER_SET_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CHARACTER_SET_NAME {
                get {
                    try {
                        return ((string)(this[this.tableColumns.CHARACTER_SET_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHARACTER_SET_NAME\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.CHARACTER_SET_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COLLATION_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableColumns.COLLATION_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLLATION_CATALOG\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.COLLATION_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COLLATION_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableColumns.COLLATION_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLLATION_SCHEMA\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.COLLATION_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COLLATION_NAME {
                get {
                    try {
                        return ((string)(this[this.tableColumns.COLLATION_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLLATION_NAME\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.COLLATION_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DOMAIN_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableColumns.DOMAIN_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOMAIN_CATALOG\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.DOMAIN_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DOMAIN_NAME {
                get {
                    try {
                        return ((string)(this[this.tableColumns.DOMAIN_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOMAIN_NAME\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.DOMAIN_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableColumns.DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRIPTION\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PRIMARY_KEY {
                get {
                    try {
                        return ((bool)(this[this.tableColumns.PRIMARY_KEYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRIMARY_KEY\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.PRIMARY_KEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EDM_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableColumns.EDM_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EDM_TYPE\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.EDM_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AUTOINCREMENT {
                get {
                    try {
                        return ((bool)(this[this.tableColumns.AUTOINCREMENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AUTOINCREMENT\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.AUTOINCREMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UNIQUE {
                get {
                    try {
                        return ((bool)(this[this.tableColumns.UNIQUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNIQUE\' in table \'Columns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableColumns.UNIQUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TablesRow TablesRowParent {
                get {
                    return ((TablesRow)(this.GetParentRow(this.Table.ParentRelations["Tables_Columns"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Tables_Columns"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLUMN_GUIDNull() {
                return this.IsNull(this.tableColumns.COLUMN_GUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLUMN_GUIDNull() {
                this[this.tableColumns.COLUMN_GUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLUMN_PROPIDNull() {
                return this.IsNull(this.tableColumns.COLUMN_PROPIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLUMN_PROPIDNull() {
                this[this.tableColumns.COLUMN_PROPIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsORDINAL_POSITIONNull() {
                return this.IsNull(this.tableColumns.ORDINAL_POSITIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetORDINAL_POSITIONNull() {
                this[this.tableColumns.ORDINAL_POSITIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLUMN_HASDEFAULTNull() {
                return this.IsNull(this.tableColumns.COLUMN_HASDEFAULTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLUMN_HASDEFAULTNull() {
                this[this.tableColumns.COLUMN_HASDEFAULTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLUMN_DEFAULTNull() {
                return this.IsNull(this.tableColumns.COLUMN_DEFAULTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLUMN_DEFAULTNull() {
                this[this.tableColumns.COLUMN_DEFAULTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLUMN_FLAGSNull() {
                return this.IsNull(this.tableColumns.COLUMN_FLAGSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLUMN_FLAGSNull() {
                this[this.tableColumns.COLUMN_FLAGSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIS_NULLABLENull() {
                return this.IsNull(this.tableColumns.IS_NULLABLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIS_NULLABLENull() {
                this[this.tableColumns.IS_NULLABLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDATA_TYPENull() {
                return this.IsNull(this.tableColumns.DATA_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDATA_TYPENull() {
                this[this.tableColumns.DATA_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTYPE_GUIDNull() {
                return this.IsNull(this.tableColumns.TYPE_GUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTYPE_GUIDNull() {
                this[this.tableColumns.TYPE_GUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHARACTER_MAXIMUM_LENGTHNull() {
                return this.IsNull(this.tableColumns.CHARACTER_MAXIMUM_LENGTHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHARACTER_MAXIMUM_LENGTHNull() {
                this[this.tableColumns.CHARACTER_MAXIMUM_LENGTHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHARACTER_OCTET_LENGTHNull() {
                return this.IsNull(this.tableColumns.CHARACTER_OCTET_LENGTHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHARACTER_OCTET_LENGTHNull() {
                this[this.tableColumns.CHARACTER_OCTET_LENGTHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNUMERIC_PRECISIONNull() {
                return this.IsNull(this.tableColumns.NUMERIC_PRECISIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNUMERIC_PRECISIONNull() {
                this[this.tableColumns.NUMERIC_PRECISIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNUMERIC_SCALENull() {
                return this.IsNull(this.tableColumns.NUMERIC_SCALEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNUMERIC_SCALENull() {
                this[this.tableColumns.NUMERIC_SCALEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDATETIME_PRECISIONNull() {
                return this.IsNull(this.tableColumns.DATETIME_PRECISIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDATETIME_PRECISIONNull() {
                this[this.tableColumns.DATETIME_PRECISIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHARACTER_SET_CATALOGNull() {
                return this.IsNull(this.tableColumns.CHARACTER_SET_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHARACTER_SET_CATALOGNull() {
                this[this.tableColumns.CHARACTER_SET_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHARACTER_SET_SCHEMANull() {
                return this.IsNull(this.tableColumns.CHARACTER_SET_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHARACTER_SET_SCHEMANull() {
                this[this.tableColumns.CHARACTER_SET_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHARACTER_SET_NAMENull() {
                return this.IsNull(this.tableColumns.CHARACTER_SET_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHARACTER_SET_NAMENull() {
                this[this.tableColumns.CHARACTER_SET_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLLATION_CATALOGNull() {
                return this.IsNull(this.tableColumns.COLLATION_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLLATION_CATALOGNull() {
                this[this.tableColumns.COLLATION_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLLATION_SCHEMANull() {
                return this.IsNull(this.tableColumns.COLLATION_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLLATION_SCHEMANull() {
                this[this.tableColumns.COLLATION_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLLATION_NAMENull() {
                return this.IsNull(this.tableColumns.COLLATION_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLLATION_NAMENull() {
                this[this.tableColumns.COLLATION_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDOMAIN_CATALOGNull() {
                return this.IsNull(this.tableColumns.DOMAIN_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDOMAIN_CATALOGNull() {
                this[this.tableColumns.DOMAIN_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDOMAIN_NAMENull() {
                return this.IsNull(this.tableColumns.DOMAIN_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDOMAIN_NAMENull() {
                this[this.tableColumns.DOMAIN_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDESCRIPTIONNull() {
                return this.IsNull(this.tableColumns.DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDESCRIPTIONNull() {
                this[this.tableColumns.DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPRIMARY_KEYNull() {
                return this.IsNull(this.tableColumns.PRIMARY_KEYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPRIMARY_KEYNull() {
                this[this.tableColumns.PRIMARY_KEYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEDM_TYPENull() {
                return this.IsNull(this.tableColumns.EDM_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEDM_TYPENull() {
                this[this.tableColumns.EDM_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAUTOINCREMENTNull() {
                return this.IsNull(this.tableColumns.AUTOINCREMENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAUTOINCREMENTNull() {
                this[this.tableColumns.AUTOINCREMENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUNIQUENull() {
                return this.IsNull(this.tableColumns.UNIQUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUNIQUENull() {
                this[this.tableColumns.UNIQUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndexColumnsRow[] GetIndexColumnsRows() {
                if ((this.Table.ChildRelations["Columns_IndexColumns"] == null)) {
                    return new IndexColumnsRow[0];
                }
                else {
                    return ((IndexColumnsRow[])(base.GetChildRows(this.Table.ChildRelations["Columns_IndexColumns"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class IndexesRow : global::System.Data.DataRow {
            
            private IndexesDataTable tableIndexes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal IndexesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIndexes = ((IndexesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableIndexes.TABLE_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TABLE_CATALOG\' in table \'Indexes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexes.TABLE_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableIndexes.TABLE_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TABLE_SCHEMA\' in table \'Indexes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexes.TABLE_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableIndexes.TABLE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TABLE_NAME\' in table \'Indexes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexes.TABLE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string INDEX_CATALOG {
                get {
                    return ((string)(this[this.tableIndexes.INDEX_CATALOGColumn]));
                }
                set {
                    this[this.tableIndexes.INDEX_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string INDEX_SCHEMA {
                get {
                    return ((string)(this[this.tableIndexes.INDEX_SCHEMAColumn]));
                }
                set {
                    this[this.tableIndexes.INDEX_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string INDEX_NAME {
                get {
                    return ((string)(this[this.tableIndexes.INDEX_NAMEColumn]));
                }
                set {
                    this[this.tableIndexes.INDEX_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PRIMARY_KEY {
                get {
                    try {
                        return ((bool)(this[this.tableIndexes.PRIMARY_KEYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRIMARY_KEY\' in table \'Indexes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexes.PRIMARY_KEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UNIQUE {
                get {
                    try {
                        return ((bool)(this[this.tableIndexes.UNIQUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNIQUE\' in table \'Indexes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexes.UNIQUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CLUSTERED {
                get {
                    try {
                        return ((bool)(this[this.tableIndexes.CLUSTEREDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CLUSTERED\' in table \'Indexes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexes.CLUSTEREDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TYPE {
                get {
                    try {
                        return ((int)(this[this.tableIndexes.TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYPE\' in table \'Indexes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexes.TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FILL_FACTOR {
                get {
                    try {
                        return ((int)(this[this.tableIndexes.FILL_FACTORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FILL_FACTOR\' in table \'Indexes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexes.FILL_FACTORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int INITIAL_SIZE {
                get {
                    try {
                        return ((int)(this[this.tableIndexes.INITIAL_SIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INITIAL_SIZE\' in table \'Indexes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexes.INITIAL_SIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NULLS {
                get {
                    try {
                        return ((int)(this[this.tableIndexes.NULLSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NULLS\' in table \'Indexes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexes.NULLSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool SORT_BOOKMARKS {
                get {
                    try {
                        return ((bool)(this[this.tableIndexes.SORT_BOOKMARKSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SORT_BOOKMARKS\' in table \'Indexes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexes.SORT_BOOKMARKSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AUTO_UPDATE {
                get {
                    try {
                        return ((bool)(this[this.tableIndexes.AUTO_UPDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AUTO_UPDATE\' in table \'Indexes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexes.AUTO_UPDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NULL_COLLATION {
                get {
                    try {
                        return ((int)(this[this.tableIndexes.NULL_COLLATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NULL_COLLATION\' in table \'Indexes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexes.NULL_COLLATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ORDINAL_POSITION {
                get {
                    try {
                        return ((int)(this[this.tableIndexes.ORDINAL_POSITIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORDINAL_POSITION\' in table \'Indexes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexes.ORDINAL_POSITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COLUMN_NAME {
                get {
                    try {
                        return ((string)(this[this.tableIndexes.COLUMN_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLUMN_NAME\' in table \'Indexes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexes.COLUMN_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid COLUMN_GUID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableIndexes.COLUMN_GUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLUMN_GUID\' in table \'Indexes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexes.COLUMN_GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long COLUMN_PROPID {
                get {
                    try {
                        return ((long)(this[this.tableIndexes.COLUMN_PROPIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLUMN_PROPID\' in table \'Indexes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexes.COLUMN_PROPIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short COLLATION {
                get {
                    try {
                        return ((short)(this[this.tableIndexes.COLLATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLLATION\' in table \'Indexes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexes.COLLATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CARDINALITY {
                get {
                    try {
                        return ((decimal)(this[this.tableIndexes.CARDINALITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CARDINALITY\' in table \'Indexes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexes.CARDINALITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PAGES {
                get {
                    try {
                        return ((int)(this[this.tableIndexes.PAGESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAGES\' in table \'Indexes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexes.PAGESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FILTER_CONDITION {
                get {
                    try {
                        return ((string)(this[this.tableIndexes.FILTER_CONDITIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FILTER_CONDITION\' in table \'Indexes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexes.FILTER_CONDITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool INTEGRATED {
                get {
                    try {
                        return ((bool)(this[this.tableIndexes.INTEGRATEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTEGRATED\' in table \'Indexes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexes.INTEGRATEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string INDEX_DEFINITION {
                get {
                    try {
                        return ((string)(this[this.tableIndexes.INDEX_DEFINITIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INDEX_DEFINITION\' in table \'Indexes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexes.INDEX_DEFINITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TablesRow TablesRowParent {
                get {
                    return ((TablesRow)(this.GetParentRow(this.Table.ParentRelations["Tables_Indexes"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Tables_Indexes"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CatalogsRow CatalogsRow {
                get {
                    return ((CatalogsRow)(this.GetParentRow(this.Table.ParentRelations["Catalogs_Indexes"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Catalogs_Indexes"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTABLE_CATALOGNull() {
                return this.IsNull(this.tableIndexes.TABLE_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTABLE_CATALOGNull() {
                this[this.tableIndexes.TABLE_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTABLE_SCHEMANull() {
                return this.IsNull(this.tableIndexes.TABLE_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTABLE_SCHEMANull() {
                this[this.tableIndexes.TABLE_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTABLE_NAMENull() {
                return this.IsNull(this.tableIndexes.TABLE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTABLE_NAMENull() {
                this[this.tableIndexes.TABLE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPRIMARY_KEYNull() {
                return this.IsNull(this.tableIndexes.PRIMARY_KEYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPRIMARY_KEYNull() {
                this[this.tableIndexes.PRIMARY_KEYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUNIQUENull() {
                return this.IsNull(this.tableIndexes.UNIQUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUNIQUENull() {
                this[this.tableIndexes.UNIQUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCLUSTEREDNull() {
                return this.IsNull(this.tableIndexes.CLUSTEREDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCLUSTEREDNull() {
                this[this.tableIndexes.CLUSTEREDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTYPENull() {
                return this.IsNull(this.tableIndexes.TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTYPENull() {
                this[this.tableIndexes.TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFILL_FACTORNull() {
                return this.IsNull(this.tableIndexes.FILL_FACTORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFILL_FACTORNull() {
                this[this.tableIndexes.FILL_FACTORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINITIAL_SIZENull() {
                return this.IsNull(this.tableIndexes.INITIAL_SIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINITIAL_SIZENull() {
                this[this.tableIndexes.INITIAL_SIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNULLSNull() {
                return this.IsNull(this.tableIndexes.NULLSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNULLSNull() {
                this[this.tableIndexes.NULLSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSORT_BOOKMARKSNull() {
                return this.IsNull(this.tableIndexes.SORT_BOOKMARKSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSORT_BOOKMARKSNull() {
                this[this.tableIndexes.SORT_BOOKMARKSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAUTO_UPDATENull() {
                return this.IsNull(this.tableIndexes.AUTO_UPDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAUTO_UPDATENull() {
                this[this.tableIndexes.AUTO_UPDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNULL_COLLATIONNull() {
                return this.IsNull(this.tableIndexes.NULL_COLLATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNULL_COLLATIONNull() {
                this[this.tableIndexes.NULL_COLLATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsORDINAL_POSITIONNull() {
                return this.IsNull(this.tableIndexes.ORDINAL_POSITIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetORDINAL_POSITIONNull() {
                this[this.tableIndexes.ORDINAL_POSITIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLUMN_NAMENull() {
                return this.IsNull(this.tableIndexes.COLUMN_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLUMN_NAMENull() {
                this[this.tableIndexes.COLUMN_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLUMN_GUIDNull() {
                return this.IsNull(this.tableIndexes.COLUMN_GUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLUMN_GUIDNull() {
                this[this.tableIndexes.COLUMN_GUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLUMN_PROPIDNull() {
                return this.IsNull(this.tableIndexes.COLUMN_PROPIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLUMN_PROPIDNull() {
                this[this.tableIndexes.COLUMN_PROPIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLLATIONNull() {
                return this.IsNull(this.tableIndexes.COLLATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLLATIONNull() {
                this[this.tableIndexes.COLLATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCARDINALITYNull() {
                return this.IsNull(this.tableIndexes.CARDINALITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCARDINALITYNull() {
                this[this.tableIndexes.CARDINALITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPAGESNull() {
                return this.IsNull(this.tableIndexes.PAGESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPAGESNull() {
                this[this.tableIndexes.PAGESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFILTER_CONDITIONNull() {
                return this.IsNull(this.tableIndexes.FILTER_CONDITIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFILTER_CONDITIONNull() {
                this[this.tableIndexes.FILTER_CONDITIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINTEGRATEDNull() {
                return this.IsNull(this.tableIndexes.INTEGRATEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINTEGRATEDNull() {
                this[this.tableIndexes.INTEGRATEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINDEX_DEFINITIONNull() {
                return this.IsNull(this.tableIndexes.INDEX_DEFINITIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINDEX_DEFINITIONNull() {
                this[this.tableIndexes.INDEX_DEFINITIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndexColumnsRow[] GetIndexColumnsRows() {
                if ((this.Table.ChildRelations["Indexes_IndexColumns"] == null)) {
                    return new IndexColumnsRow[0];
                }
                else {
                    return ((IndexColumnsRow[])(base.GetChildRows(this.Table.ChildRelations["Indexes_IndexColumns"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class IndexColumnsRow : global::System.Data.DataRow {
            
            private IndexColumnsDataTable tableIndexColumns;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal IndexColumnsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIndexColumns = ((IndexColumnsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CONSTRAINT_CATALOG {
                get {
                    return ((string)(this[this.tableIndexColumns.CONSTRAINT_CATALOGColumn]));
                }
                set {
                    this[this.tableIndexColumns.CONSTRAINT_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CONSTRAINT_SCHEMA {
                get {
                    return ((string)(this[this.tableIndexColumns.CONSTRAINT_SCHEMAColumn]));
                }
                set {
                    this[this.tableIndexColumns.CONSTRAINT_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CONSTRAINT_NAME {
                get {
                    return ((string)(this[this.tableIndexColumns.CONSTRAINT_NAMEColumn]));
                }
                set {
                    this[this.tableIndexColumns.CONSTRAINT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableIndexColumns.TABLE_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TABLE_CATALOG\' in table \'IndexColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexColumns.TABLE_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableIndexColumns.TABLE_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TABLE_SCHEMA\' in table \'IndexColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexColumns.TABLE_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableIndexColumns.TABLE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TABLE_NAME\' in table \'IndexColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexColumns.TABLE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COLUMN_NAME {
                get {
                    return ((string)(this[this.tableIndexColumns.COLUMN_NAMEColumn]));
                }
                set {
                    this[this.tableIndexColumns.COLUMN_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ORDINAL_POSITION {
                get {
                    return ((int)(this[this.tableIndexColumns.ORDINAL_POSITIONColumn]));
                }
                set {
                    this[this.tableIndexColumns.ORDINAL_POSITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string INDEX_NAME {
                get {
                    return ((string)(this[this.tableIndexColumns.INDEX_NAMEColumn]));
                }
                set {
                    this[this.tableIndexColumns.INDEX_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COLLATION_NAME {
                get {
                    try {
                        return ((string)(this[this.tableIndexColumns.COLLATION_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLLATION_NAME\' in table \'IndexColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexColumns.COLLATION_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SORT_MODE {
                get {
                    try {
                        return ((string)(this[this.tableIndexColumns.SORT_MODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SORT_MODE\' in table \'IndexColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexColumns.SORT_MODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CONFLICT_OPTION {
                get {
                    try {
                        return ((int)(this[this.tableIndexColumns.CONFLICT_OPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONFLICT_OPTION\' in table \'IndexColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableIndexColumns.CONFLICT_OPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ColumnsRow ColumnsRowParent {
                get {
                    return ((ColumnsRow)(this.GetParentRow(this.Table.ParentRelations["Columns_IndexColumns"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Columns_IndexColumns"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndexesRow IndexesRowParent {
                get {
                    return ((IndexesRow)(this.GetParentRow(this.Table.ParentRelations["Indexes_IndexColumns"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Indexes_IndexColumns"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTABLE_CATALOGNull() {
                return this.IsNull(this.tableIndexColumns.TABLE_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTABLE_CATALOGNull() {
                this[this.tableIndexColumns.TABLE_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTABLE_SCHEMANull() {
                return this.IsNull(this.tableIndexColumns.TABLE_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTABLE_SCHEMANull() {
                this[this.tableIndexColumns.TABLE_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTABLE_NAMENull() {
                return this.IsNull(this.tableIndexColumns.TABLE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTABLE_NAMENull() {
                this[this.tableIndexColumns.TABLE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLLATION_NAMENull() {
                return this.IsNull(this.tableIndexColumns.COLLATION_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLLATION_NAMENull() {
                this[this.tableIndexColumns.COLLATION_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSORT_MODENull() {
                return this.IsNull(this.tableIndexColumns.SORT_MODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSORT_MODENull() {
                this[this.tableIndexColumns.SORT_MODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCONFLICT_OPTIONNull() {
                return this.IsNull(this.tableIndexColumns.CONFLICT_OPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCONFLICT_OPTIONNull() {
                this[this.tableIndexColumns.CONFLICT_OPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ViewsRow : global::System.Data.DataRow {
            
            private ViewsDataTable tableViews;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ViewsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableViews = ((ViewsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_CATALOG {
                get {
                    return ((string)(this[this.tableViews.TABLE_CATALOGColumn]));
                }
                set {
                    this[this.tableViews.TABLE_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_SCHEMA {
                get {
                    return ((string)(this[this.tableViews.TABLE_SCHEMAColumn]));
                }
                set {
                    this[this.tableViews.TABLE_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_NAME {
                get {
                    return ((string)(this[this.tableViews.TABLE_NAMEColumn]));
                }
                set {
                    this[this.tableViews.TABLE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VIEW_DEFINITION {
                get {
                    try {
                        return ((string)(this[this.tableViews.VIEW_DEFINITIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VIEW_DEFINITION\' in table \'Views\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViews.VIEW_DEFINITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CHECK_OPTION {
                get {
                    try {
                        return ((bool)(this[this.tableViews.CHECK_OPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHECK_OPTION\' in table \'Views\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViews.CHECK_OPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IS_UPDATABLE {
                get {
                    try {
                        return ((bool)(this[this.tableViews.IS_UPDATABLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_UPDATABLE\' in table \'Views\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViews.IS_UPDATABLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableViews.DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRIPTION\' in table \'Views\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViews.DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DATE_CREATED {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableViews.DATE_CREATEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATE_CREATED\' in table \'Views\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViews.DATE_CREATEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DATE_MODIFIED {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableViews.DATE_MODIFIEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATE_MODIFIED\' in table \'Views\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViews.DATE_MODIFIEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CatalogsRow CatalogsRow {
                get {
                    return ((CatalogsRow)(this.GetParentRow(this.Table.ParentRelations["Catalogs_Views"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Catalogs_Views"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVIEW_DEFINITIONNull() {
                return this.IsNull(this.tableViews.VIEW_DEFINITIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVIEW_DEFINITIONNull() {
                this[this.tableViews.VIEW_DEFINITIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHECK_OPTIONNull() {
                return this.IsNull(this.tableViews.CHECK_OPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHECK_OPTIONNull() {
                this[this.tableViews.CHECK_OPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIS_UPDATABLENull() {
                return this.IsNull(this.tableViews.IS_UPDATABLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIS_UPDATABLENull() {
                this[this.tableViews.IS_UPDATABLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDESCRIPTIONNull() {
                return this.IsNull(this.tableViews.DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDESCRIPTIONNull() {
                this[this.tableViews.DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDATE_CREATEDNull() {
                return this.IsNull(this.tableViews.DATE_CREATEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDATE_CREATEDNull() {
                this[this.tableViews.DATE_CREATEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDATE_MODIFIEDNull() {
                return this.IsNull(this.tableViews.DATE_MODIFIEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDATE_MODIFIEDNull() {
                this[this.tableViews.DATE_MODIFIEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewColumnsRow[] GetViewColumnsRows() {
                if ((this.Table.ChildRelations["Views_ViewColumns"] == null)) {
                    return new ViewColumnsRow[0];
                }
                else {
                    return ((ViewColumnsRow[])(base.GetChildRows(this.Table.ChildRelations["Views_ViewColumns"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ViewColumnsRow : global::System.Data.DataRow {
            
            private ViewColumnsDataTable tableViewColumns;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ViewColumnsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableViewColumns = ((ViewColumnsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VIEW_CATALOG {
                get {
                    return ((string)(this[this.tableViewColumns.VIEW_CATALOGColumn]));
                }
                set {
                    this[this.tableViewColumns.VIEW_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VIEW_SCHEMA {
                get {
                    return ((string)(this[this.tableViewColumns.VIEW_SCHEMAColumn]));
                }
                set {
                    this[this.tableViewColumns.VIEW_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VIEW_NAME {
                get {
                    return ((string)(this[this.tableViewColumns.VIEW_NAMEColumn]));
                }
                set {
                    this[this.tableViewColumns.VIEW_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VIEW_COLUMN_NAME {
                get {
                    return ((string)(this[this.tableViewColumns.VIEW_COLUMN_NAMEColumn]));
                }
                set {
                    this[this.tableViewColumns.VIEW_COLUMN_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableViewColumns.TABLE_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TABLE_CATALOG\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViewColumns.TABLE_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableViewColumns.TABLE_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TABLE_SCHEMA\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViewColumns.TABLE_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableViewColumns.TABLE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TABLE_NAME\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViewColumns.TABLE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COLUMN_NAME {
                get {
                    try {
                        return ((string)(this[this.tableViewColumns.COLUMN_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLUMN_NAME\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViewColumns.COLUMN_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ORDINAL_POSITION {
                get {
                    try {
                        return ((int)(this[this.tableViewColumns.ORDINAL_POSITIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORDINAL_POSITION\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViewColumns.ORDINAL_POSITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool COLUMN_HASDEFAULT {
                get {
                    try {
                        return ((bool)(this[this.tableViewColumns.COLUMN_HASDEFAULTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLUMN_HASDEFAULT\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViewColumns.COLUMN_HASDEFAULTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COLUMN_DEFAULT {
                get {
                    try {
                        return ((string)(this[this.tableViewColumns.COLUMN_DEFAULTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLUMN_DEFAULT\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViewColumns.COLUMN_DEFAULTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long COLUMN_FLAGS {
                get {
                    try {
                        return ((long)(this[this.tableViewColumns.COLUMN_FLAGSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLUMN_FLAGS\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViewColumns.COLUMN_FLAGSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IS_NULLABLE {
                get {
                    try {
                        return ((bool)(this[this.tableViewColumns.IS_NULLABLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_NULLABLE\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViewColumns.IS_NULLABLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DATA_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableViewColumns.DATA_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATA_TYPE\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViewColumns.DATA_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CHARACTER_MAXIMUM_LENGTH {
                get {
                    try {
                        return ((int)(this[this.tableViewColumns.CHARACTER_MAXIMUM_LENGTHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHARACTER_MAXIMUM_LENGTH\' in table \'ViewColumns\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableViewColumns.CHARACTER_MAXIMUM_LENGTHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NUMERIC_PRECISION {
                get {
                    try {
                        return ((int)(this[this.tableViewColumns.NUMERIC_PRECISIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUMERIC_PRECISION\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViewColumns.NUMERIC_PRECISIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NUMERIC_SCALE {
                get {
                    try {
                        return ((int)(this[this.tableViewColumns.NUMERIC_SCALEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUMERIC_SCALE\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViewColumns.NUMERIC_SCALEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DATETIME_PRECISION {
                get {
                    try {
                        return ((long)(this[this.tableViewColumns.DATETIME_PRECISIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATETIME_PRECISION\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViewColumns.DATETIME_PRECISIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CHARACTER_SET_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableViewColumns.CHARACTER_SET_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHARACTER_SET_CATALOG\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViewColumns.CHARACTER_SET_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CHARACTER_SET_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableViewColumns.CHARACTER_SET_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHARACTER_SET_SCHEMA\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViewColumns.CHARACTER_SET_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CHARACTER_SET_NAME {
                get {
                    try {
                        return ((string)(this[this.tableViewColumns.CHARACTER_SET_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHARACTER_SET_NAME\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViewColumns.CHARACTER_SET_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COLLATION_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableViewColumns.COLLATION_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLLATION_CATALOG\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViewColumns.COLLATION_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COLLATION_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableViewColumns.COLLATION_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLLATION_SCHEMA\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViewColumns.COLLATION_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COLLATION_NAME {
                get {
                    try {
                        return ((string)(this[this.tableViewColumns.COLLATION_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLLATION_NAME\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViewColumns.COLLATION_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PRIMARY_KEY {
                get {
                    try {
                        return ((bool)(this[this.tableViewColumns.PRIMARY_KEYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRIMARY_KEY\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViewColumns.PRIMARY_KEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EDM_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableViewColumns.EDM_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EDM_TYPE\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViewColumns.EDM_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AUTOINCREMENT {
                get {
                    try {
                        return ((bool)(this[this.tableViewColumns.AUTOINCREMENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AUTOINCREMENT\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViewColumns.AUTOINCREMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UNIQUE {
                get {
                    try {
                        return ((bool)(this[this.tableViewColumns.UNIQUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNIQUE\' in table \'ViewColumns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableViewColumns.UNIQUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewsRow ViewsRowParent {
                get {
                    return ((ViewsRow)(this.GetParentRow(this.Table.ParentRelations["Views_ViewColumns"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Views_ViewColumns"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTABLE_CATALOGNull() {
                return this.IsNull(this.tableViewColumns.TABLE_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTABLE_CATALOGNull() {
                this[this.tableViewColumns.TABLE_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTABLE_SCHEMANull() {
                return this.IsNull(this.tableViewColumns.TABLE_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTABLE_SCHEMANull() {
                this[this.tableViewColumns.TABLE_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTABLE_NAMENull() {
                return this.IsNull(this.tableViewColumns.TABLE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTABLE_NAMENull() {
                this[this.tableViewColumns.TABLE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLUMN_NAMENull() {
                return this.IsNull(this.tableViewColumns.COLUMN_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLUMN_NAMENull() {
                this[this.tableViewColumns.COLUMN_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsORDINAL_POSITIONNull() {
                return this.IsNull(this.tableViewColumns.ORDINAL_POSITIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetORDINAL_POSITIONNull() {
                this[this.tableViewColumns.ORDINAL_POSITIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLUMN_HASDEFAULTNull() {
                return this.IsNull(this.tableViewColumns.COLUMN_HASDEFAULTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLUMN_HASDEFAULTNull() {
                this[this.tableViewColumns.COLUMN_HASDEFAULTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLUMN_DEFAULTNull() {
                return this.IsNull(this.tableViewColumns.COLUMN_DEFAULTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLUMN_DEFAULTNull() {
                this[this.tableViewColumns.COLUMN_DEFAULTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLUMN_FLAGSNull() {
                return this.IsNull(this.tableViewColumns.COLUMN_FLAGSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLUMN_FLAGSNull() {
                this[this.tableViewColumns.COLUMN_FLAGSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIS_NULLABLENull() {
                return this.IsNull(this.tableViewColumns.IS_NULLABLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIS_NULLABLENull() {
                this[this.tableViewColumns.IS_NULLABLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDATA_TYPENull() {
                return this.IsNull(this.tableViewColumns.DATA_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDATA_TYPENull() {
                this[this.tableViewColumns.DATA_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHARACTER_MAXIMUM_LENGTHNull() {
                return this.IsNull(this.tableViewColumns.CHARACTER_MAXIMUM_LENGTHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHARACTER_MAXIMUM_LENGTHNull() {
                this[this.tableViewColumns.CHARACTER_MAXIMUM_LENGTHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNUMERIC_PRECISIONNull() {
                return this.IsNull(this.tableViewColumns.NUMERIC_PRECISIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNUMERIC_PRECISIONNull() {
                this[this.tableViewColumns.NUMERIC_PRECISIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNUMERIC_SCALENull() {
                return this.IsNull(this.tableViewColumns.NUMERIC_SCALEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNUMERIC_SCALENull() {
                this[this.tableViewColumns.NUMERIC_SCALEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDATETIME_PRECISIONNull() {
                return this.IsNull(this.tableViewColumns.DATETIME_PRECISIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDATETIME_PRECISIONNull() {
                this[this.tableViewColumns.DATETIME_PRECISIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHARACTER_SET_CATALOGNull() {
                return this.IsNull(this.tableViewColumns.CHARACTER_SET_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHARACTER_SET_CATALOGNull() {
                this[this.tableViewColumns.CHARACTER_SET_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHARACTER_SET_SCHEMANull() {
                return this.IsNull(this.tableViewColumns.CHARACTER_SET_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHARACTER_SET_SCHEMANull() {
                this[this.tableViewColumns.CHARACTER_SET_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHARACTER_SET_NAMENull() {
                return this.IsNull(this.tableViewColumns.CHARACTER_SET_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHARACTER_SET_NAMENull() {
                this[this.tableViewColumns.CHARACTER_SET_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLLATION_CATALOGNull() {
                return this.IsNull(this.tableViewColumns.COLLATION_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLLATION_CATALOGNull() {
                this[this.tableViewColumns.COLLATION_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLLATION_SCHEMANull() {
                return this.IsNull(this.tableViewColumns.COLLATION_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLLATION_SCHEMANull() {
                this[this.tableViewColumns.COLLATION_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLLATION_NAMENull() {
                return this.IsNull(this.tableViewColumns.COLLATION_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLLATION_NAMENull() {
                this[this.tableViewColumns.COLLATION_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPRIMARY_KEYNull() {
                return this.IsNull(this.tableViewColumns.PRIMARY_KEYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPRIMARY_KEYNull() {
                this[this.tableViewColumns.PRIMARY_KEYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEDM_TYPENull() {
                return this.IsNull(this.tableViewColumns.EDM_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEDM_TYPENull() {
                this[this.tableViewColumns.EDM_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAUTOINCREMENTNull() {
                return this.IsNull(this.tableViewColumns.AUTOINCREMENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAUTOINCREMENTNull() {
                this[this.tableViewColumns.AUTOINCREMENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUNIQUENull() {
                return this.IsNull(this.tableViewColumns.UNIQUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUNIQUENull() {
                this[this.tableViewColumns.UNIQUEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ForeignKeysRow : global::System.Data.DataRow {
            
            private ForeignKeysDataTable tableForeignKeys;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ForeignKeysRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableForeignKeys = ((ForeignKeysDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CONSTRAINT_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableForeignKeys.CONSTRAINT_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONSTRAINT_CATALOG\' in table \'ForeignKeys\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignKeys.CONSTRAINT_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CONSTRAINT_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableForeignKeys.CONSTRAINT_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONSTRAINT_SCHEMA\' in table \'ForeignKeys\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignKeys.CONSTRAINT_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CONSTRAINT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableForeignKeys.CONSTRAINT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONSTRAINT_NAME\' in table \'ForeignKeys\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignKeys.CONSTRAINT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableForeignKeys.TABLE_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TABLE_CATALOG\' in table \'ForeignKeys\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignKeys.TABLE_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableForeignKeys.TABLE_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TABLE_SCHEMA\' in table \'ForeignKeys\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignKeys.TABLE_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableForeignKeys.TABLE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TABLE_NAME\' in table \'ForeignKeys\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignKeys.TABLE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CONSTRAINT_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableForeignKeys.CONSTRAINT_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONSTRAINT_TYPE\' in table \'ForeignKeys\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignKeys.CONSTRAINT_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IS_DEFERRABLE {
                get {
                    try {
                        return ((bool)(this[this.tableForeignKeys.IS_DEFERRABLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_DEFERRABLE\' in table \'ForeignKeys\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignKeys.IS_DEFERRABLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool INITIALLY_DEFERRED {
                get {
                    try {
                        return ((bool)(this[this.tableForeignKeys.INITIALLY_DEFERREDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INITIALLY_DEFERRED\' in table \'ForeignKeys\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignKeys.INITIALLY_DEFERREDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FKEY_FROM_COLUMN {
                get {
                    try {
                        return ((string)(this[this.tableForeignKeys.FKEY_FROM_COLUMNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FKEY_FROM_COLUMN\' in table \'ForeignKeys\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignKeys.FKEY_FROM_COLUMNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FKEY_FROM_ORDINAL_POSITION {
                get {
                    try {
                        return ((int)(this[this.tableForeignKeys.FKEY_FROM_ORDINAL_POSITIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FKEY_FROM_ORDINAL_POSITION\' in table \'ForeignKeys\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableForeignKeys.FKEY_FROM_ORDINAL_POSITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FKEY_TO_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableForeignKeys.FKEY_TO_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FKEY_TO_CATALOG\' in table \'ForeignKeys\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignKeys.FKEY_TO_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FKEY_TO_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableForeignKeys.FKEY_TO_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FKEY_TO_SCHEMA\' in table \'ForeignKeys\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignKeys.FKEY_TO_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FKEY_TO_TABLE {
                get {
                    try {
                        return ((string)(this[this.tableForeignKeys.FKEY_TO_TABLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FKEY_TO_TABLE\' in table \'ForeignKeys\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignKeys.FKEY_TO_TABLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FKEY_TO_COLUMN {
                get {
                    try {
                        return ((string)(this[this.tableForeignKeys.FKEY_TO_COLUMNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FKEY_TO_COLUMN\' in table \'ForeignKeys\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignKeys.FKEY_TO_COLUMNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCONSTRAINT_CATALOGNull() {
                return this.IsNull(this.tableForeignKeys.CONSTRAINT_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCONSTRAINT_CATALOGNull() {
                this[this.tableForeignKeys.CONSTRAINT_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCONSTRAINT_SCHEMANull() {
                return this.IsNull(this.tableForeignKeys.CONSTRAINT_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCONSTRAINT_SCHEMANull() {
                this[this.tableForeignKeys.CONSTRAINT_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCONSTRAINT_NAMENull() {
                return this.IsNull(this.tableForeignKeys.CONSTRAINT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCONSTRAINT_NAMENull() {
                this[this.tableForeignKeys.CONSTRAINT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTABLE_CATALOGNull() {
                return this.IsNull(this.tableForeignKeys.TABLE_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTABLE_CATALOGNull() {
                this[this.tableForeignKeys.TABLE_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTABLE_SCHEMANull() {
                return this.IsNull(this.tableForeignKeys.TABLE_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTABLE_SCHEMANull() {
                this[this.tableForeignKeys.TABLE_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTABLE_NAMENull() {
                return this.IsNull(this.tableForeignKeys.TABLE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTABLE_NAMENull() {
                this[this.tableForeignKeys.TABLE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCONSTRAINT_TYPENull() {
                return this.IsNull(this.tableForeignKeys.CONSTRAINT_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCONSTRAINT_TYPENull() {
                this[this.tableForeignKeys.CONSTRAINT_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIS_DEFERRABLENull() {
                return this.IsNull(this.tableForeignKeys.IS_DEFERRABLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIS_DEFERRABLENull() {
                this[this.tableForeignKeys.IS_DEFERRABLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINITIALLY_DEFERREDNull() {
                return this.IsNull(this.tableForeignKeys.INITIALLY_DEFERREDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINITIALLY_DEFERREDNull() {
                this[this.tableForeignKeys.INITIALLY_DEFERREDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFKEY_FROM_COLUMNNull() {
                return this.IsNull(this.tableForeignKeys.FKEY_FROM_COLUMNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFKEY_FROM_COLUMNNull() {
                this[this.tableForeignKeys.FKEY_FROM_COLUMNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFKEY_FROM_ORDINAL_POSITIONNull() {
                return this.IsNull(this.tableForeignKeys.FKEY_FROM_ORDINAL_POSITIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFKEY_FROM_ORDINAL_POSITIONNull() {
                this[this.tableForeignKeys.FKEY_FROM_ORDINAL_POSITIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFKEY_TO_CATALOGNull() {
                return this.IsNull(this.tableForeignKeys.FKEY_TO_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFKEY_TO_CATALOGNull() {
                this[this.tableForeignKeys.FKEY_TO_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFKEY_TO_SCHEMANull() {
                return this.IsNull(this.tableForeignKeys.FKEY_TO_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFKEY_TO_SCHEMANull() {
                this[this.tableForeignKeys.FKEY_TO_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFKEY_TO_TABLENull() {
                return this.IsNull(this.tableForeignKeys.FKEY_TO_TABLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFKEY_TO_TABLENull() {
                this[this.tableForeignKeys.FKEY_TO_TABLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFKEY_TO_COLUMNNull() {
                return this.IsNull(this.tableForeignKeys.FKEY_TO_COLUMNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFKEY_TO_COLUMNNull() {
                this[this.tableForeignKeys.FKEY_TO_COLUMNColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TriggersRow : global::System.Data.DataRow {
            
            private TriggersDataTable tableTriggers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TriggersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTriggers = ((TriggersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableTriggers.TABLE_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TABLE_CATALOG\' in table \'Triggers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTriggers.TABLE_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableTriggers.TABLE_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TABLE_SCHEMA\' in table \'Triggers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTriggers.TABLE_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TABLE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableTriggers.TABLE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TABLE_NAME\' in table \'Triggers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTriggers.TABLE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TRIGGER_NAME {
                get {
                    try {
                        return ((string)(this[this.tableTriggers.TRIGGER_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRIGGER_NAME\' in table \'Triggers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTriggers.TRIGGER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TRIGGER_DEFINITION {
                get {
                    try {
                        return ((string)(this[this.tableTriggers.TRIGGER_DEFINITIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRIGGER_DEFINITION\' in table \'Triggers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTriggers.TRIGGER_DEFINITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTABLE_CATALOGNull() {
                return this.IsNull(this.tableTriggers.TABLE_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTABLE_CATALOGNull() {
                this[this.tableTriggers.TABLE_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTABLE_SCHEMANull() {
                return this.IsNull(this.tableTriggers.TABLE_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTABLE_SCHEMANull() {
                this[this.tableTriggers.TABLE_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTABLE_NAMENull() {
                return this.IsNull(this.tableTriggers.TABLE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTABLE_NAMENull() {
                this[this.tableTriggers.TABLE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTRIGGER_NAMENull() {
                return this.IsNull(this.tableTriggers.TRIGGER_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTRIGGER_NAMENull() {
                this[this.tableTriggers.TRIGGER_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTRIGGER_DEFINITIONNull() {
                return this.IsNull(this.tableTriggers.TRIGGER_DEFINITIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTRIGGER_DEFINITIONNull() {
                this[this.tableTriggers.TRIGGER_DEFINITIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CatalogsRowChangeEvent : global::System.EventArgs {
            
            private CatalogsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CatalogsRowChangeEvent(CatalogsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CatalogsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TablesRowChangeEvent : global::System.EventArgs {
            
            private TablesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TablesRowChangeEvent(TablesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TablesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ColumnsRowChangeEvent : global::System.EventArgs {
            
            private ColumnsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ColumnsRowChangeEvent(ColumnsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ColumnsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class IndexesRowChangeEvent : global::System.EventArgs {
            
            private IndexesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndexesRowChangeEvent(IndexesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndexesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class IndexColumnsRowChangeEvent : global::System.EventArgs {
            
            private IndexColumnsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndexColumnsRowChangeEvent(IndexColumnsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public IndexColumnsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ViewsRowChangeEvent : global::System.EventArgs {
            
            private ViewsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewsRowChangeEvent(ViewsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ViewColumnsRowChangeEvent : global::System.EventArgs {
            
            private ViewColumnsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewColumnsRowChangeEvent(ViewColumnsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ViewColumnsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ForeignKeysRowChangeEvent : global::System.EventArgs {
            
            private ForeignKeysRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ForeignKeysRowChangeEvent(ForeignKeysRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ForeignKeysRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TriggersRowChangeEvent : global::System.EventArgs {
            
            private TriggersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TriggersRowChangeEvent(TriggersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TriggersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591